@using Biflow.Ui.Icons

@{
    var (color, icon) = Badge;
    var badgeCss = $"bg-{color}-subtle border-{color}-subtle text-{color}-emphasis";
}

<span class="rounded border d-inline-flex align-items-center fw-semibold @badgeCss"
      style="font-size: 0.8em; padding: 0.1rem 0.3rem; border-width: 1.5px !important;">
    <SvgIcon Icon="icon" />
    <span class="ms-1">@ExecutionStatus</span>
</span>

@code {
    [Parameter] public StepExecutionStatus? ExecutionStatus { get; set; }

    private (string Color, Svg Icon) Badge => ExecutionStatus switch
    {
        StepExecutionStatus.Succeeded => ("success", LucideIcon.CircleCheck),
        StepExecutionStatus.Warning => ("warning", LucideIcon.TriangleAlert),
        StepExecutionStatus.Failed => ("danger", LucideIcon.OctagonAlert),
        StepExecutionStatus.Stopped => ("warning", LucideIcon.OctagonX),
        StepExecutionStatus.Duplicate => ("warning", LucideIcon.TriangleAlert),
        StepExecutionStatus.Retry => ("warning", LucideIcon.Repeat),
        StepExecutionStatus.AwaitingRetry => ("secondary", LucideIcon.Clock),
        StepExecutionStatus.Running => ("primary", LucideIcon.Play),
        StepExecutionStatus.Skipped => ("secondary", LucideIcon.SkipForward),
        StepExecutionStatus.DependenciesFailed => ("warning", LucideIcon.CircleAlert),
        StepExecutionStatus.Queued => ("secondary", LucideIcon.Clock),
        StepExecutionStatus.NotStarted => ("secondary", LucideIcon.Info),
        _ => ("", LucideIcon.CircleHelp)
    };
} 