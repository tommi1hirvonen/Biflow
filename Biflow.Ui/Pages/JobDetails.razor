@page "/jobs/{Id:guid}/{DetailsPage}"

@*Increase dropdown menu z-index so that it is displayed over the sticky-top div in StepsComponent.*@
<style>
    .dropdown-menu {
        z-index: 1100;
    }
</style>

<div class="row">
    
</div>

<div class="row align-items-center">
    <div class="col-auto">
        <div>
            <a href="jobs">
                All jobs
            </a>
            <span>&nbsp;/&nbsp;</span>
            @if (Job?.Category is not null)
            {
                <span>@Job.Category.CategoryName /&nbsp;</span>
            }
            <strong>@Job?.JobName</strong>
        </div>
    </div>
    @if (!string.IsNullOrWhiteSpace(Job?.JobDescription))
    {
        <div class="col-auto">
            <HxButton Color="ThemeColor.Light"
                      Size="ButtonSize.Small"
                      @onclick="() => DescriptionOpen = !DescriptionOpen">
                <CxIcon Icon="FeatherIcon.Info" />
                &nbsp;
                @if (DescriptionOpen)
                {
                    <span>Hide description</span>
                }
                else
                {
                    <span>Show description</span>
                }
            </HxButton>
        </div>
    }

    <div class="col-xl d-flex flex-row flex-xl-row-reverse justify-content-xl-start mt-4 mt-xl-0 align-items-center">
        <AuthorizeView Roles="Admin, Editor">
            <div class="ms-0 ms-xl-4 me-4 me-xl-0">
                @*Dropdown to delete the current job*@
                <HxDropdownButtonGroup CssClass="ms-3">
                    <HxDropdownToggleButton Color="ThemeColor.Secondary">
                        <CxIcon Icon="FeatherIcon.Trash2" />
                        Delete
                    </HxDropdownToggleButton>
                    <HxDropdownMenu CssClass="dropdown-menu-xl-right">
                        <HxDropdownHeader>Delete job?</HxDropdownHeader>
                        <HxDropdownItem @onclick="DeleteJob">Confirm</HxDropdownItem>
                    </HxDropdownMenu>
                </HxDropdownButtonGroup>
            </div>
        </AuthorizeView>

        <AuthorizeView Roles="Admin, Editor">
            <div class="form-check form-switch">
                <input type="checkbox" class="form-check-input" id="job_enabled_toggle" checked="@(Job?.IsEnabled ?? false ? "checked" : null)" @onchange="ToggleJobEnabled">
                <label class="form-check-label" for="job_enabled_toggle">Enabled</label>
            </div>
        </AuthorizeView>

        <AuthorizeView Roles="Operator, Viewer">
            <div class="form-check form-switch">
                <input type="checkbox" class="form-check-input" disabled id="job_enabled_toggle" checked="@(Job?.IsEnabled ?? false ? "checked" : null)">
                <label class="form-check-label" for="job_enabled_toggle">Enabled</label>
            </div>
        </AuthorizeView>
    </div>
</div>

@if (DescriptionOpen && !string.IsNullOrWhiteSpace(Job?.JobDescription))
{
    <div class="row mt-3">
        <div class="col-auto border rounded" style="max-height: 110px; overflow-y: auto;">
            <small class="text-secondary" style="white-space: pre-line;">@Job?.JobDescription</small>
        </div>
    </div>
}


<div class="row mt-4 mb-4">
    <div class="col">
        <ul class="nav nav-pills" role="tablist">
            <li class="nav-item" role="presentation">
                <NavLink class="nav-link" href="@($"jobs/{Job?.JobId}/steps")">
                    <CxIcon Icon="FeatherIcon.List" />
                    Steps
                </NavLink>
            </li>
            <li class="nav-item" role="presentation">
                <NavLink class="nav-link" href="@($"jobs/{Job?.JobId}/dependencies")">
                    <CxIcon Icon="FeatherIcon.Dependency" />
                    Dependencies
                </NavLink>
            </li>
            <li class="nav-item" role="presentation">
                <NavLink class="nav-link" href="@($"jobs/{Job?.JobId}/schedules")">
                    <CxIcon Icon="FeatherIcon.Calendar" />
                    Schedules
                </NavLink>
            </li>
            <li class="nav-item" role="presentation">
                <NavLink class="nav-link" href="@($"jobs/{Job?.JobId}/history")">
                    <CxIcon Icon="FeatherIcon.Activity" />
                    History
                </NavLink>
            </li>
            <AuthorizeView Roles="Admin, Editor">
                <li class="nav-item" role="presentation">
                    <NavLink class="nav-link" href="@($"jobs/{Job?.JobId}/settings")">
                        <CxIcon Icon="FeatherIcon.Settings" />
                        Settings
                    </NavLink>
                </li>
            </AuthorizeView>
        </ul>
    </div>    
</div>

<CascadingValue Value="Job">
    <CascadingValue Value="Steps">
        <CascadingValue Value="OnJobUpdated" Name="OnJobUpdated">
            <CascadingValue Value="SortSteps" Name="SortSteps">
                @if (DetailsPage == "steps")
                {
                    <StepsComponent Jobs="Jobs"
                                    SqlConnections="SqlConnections"
                                    AsConnections="AsConnections"
                                    PipelineClients="PipelineClients"
                                    AppRegistrations="AppRegistrations"
                                    FunctionApps="FunctionApps" />
                }
                else if (DetailsPage == "history")
                {
                    <JobHistoryComponent />
                }
                else if (DetailsPage == "dependencies")
                {
                    <DependenciesComponent Jobs="Jobs"
                                           SqlConnections="SqlConnections"
                                           AsConnections="AsConnections"
                                           PipelineClients="PipelineClients"
                                           AppRegistrations="AppRegistrations"
                                           FunctionApps="FunctionApps" />
                }
                else if (DetailsPage == "schedules")
                {
                    <SchedulesComponent />
                }
                else if (DetailsPage == "settings")
                {
                    <AuthorizeView Roles="Admin, Editor">
                        <JobSettingsComponent />
                    </AuthorizeView>
                }
                else
                {
                    <p>No component to show.</p>
                }
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
</CascadingValue>