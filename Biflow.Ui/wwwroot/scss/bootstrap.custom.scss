$primary: #6a71de;
$success: #1bbe8f;
$danger: #e85875;
$warning: #dfa100;

@import "../lib/bootstrap/scss/bootstrap";

$body-bg-dark-custom: shade-color($dark, 15%);

// Change the light theme body background to be slightly darker than the default.
[data-bs-theme="light"], [data-bs-theme="auto"] {
    .bg-body {
        background-color: $light !important;
    }
}

// Change the dark theme body background to be slightly darker than the default
[data-bs-theme="dark"] {
    .bg-body {
        background-color: $body-bg-dark-custom !important;
    }
}

// Sticky top element in StepsComponent.
[data-bs-theme="light"], [data-bs-theme="auto"] {
    --sticky-top-bg: #{rgba($light, $alpha: 0.9)};
}

[data-bs-theme="dark"] {
    --sticky-top-bg: #{rgba($body-bg-dark-custom, $alpha: 0.9)};
}

// Sticky top element inside a modal.
[data-bs-theme="light"], [data-bs-theme="auto"] {
    --sticky-top-modal-bg: #{rgba($white, $alpha: 0.9)};
}

[data-bs-theme="dark"] {
    --sticky-top-modal-bg: #{rgba($body-bg-dark-custom, $alpha: 0.9)};
}

// Generate button, which automatically switches between light and dark depending on current theme.
[data-bs-theme="dark"] {
    .btn-auto {
        @include button-variant(
            rgba(0, 0, 0, 0),
            rgba(0, 0, 0, 0),
            $hover-background: shade-color($dark, 35%),
            $hover-border: shade-color($dark, 40%),
            $active-background: shade-color($dark, 40%),
            $active-border: shade-color($dark, 45%)
        );
    }
}

[data-bs-theme="light"], [data-bs-theme="auto"] {
    .btn-auto {
        @include button-variant(
            rgba(255, 255, 255, 0),
            rgba(255, 255, 255, 0),
            $hover-background: shade-color($light, $btn-hover-bg-shade-amount),
            $hover-border: shade-color($light, $btn-hover-border-shade-amount),
            $active-background: shade-color($light, $btn-active-bg-shade-amount),
            $active-border: shade-color($light, $btn-active-border-shade-amount)
        );
    }
}

// HxAutosuggest and HxInputTags
[data-bs-theme="dark"] {
    --hx-autosuggest-item-highlighted-background-color: #{$gray-800};
    --hx-input-tags-dropdown-item-highlighted-background-color: #{$gray-800};
    
    .hx-input-tags-control input {
        color: var(--bs-body-color);
    }

    .toast.bg-warning {
        color: $white;
    }
}

$navbar-gradient: #8F75DA;

// Offcanvas customizations. Increase width from the default.
.offcanvas {
    width: 600px !important;
}

.offcanvas.hx-offcanvas-lg {
    width: 800px !important;
}

.offcanvas-backdrop {
    z-index: 1050;
}

// In front of the navbar
.offcanvas {
    z-index: 1060;
}

// Buttons
.btn-primary, .btn-success, .btn-danger {
    --bs-btn-color: var(--bs-white);
    --bs-btn-hover-color: var(--bs-white);
    --bs-btn-active-color: var(--bs-btn-hover-color);
    --bs-btn-disabled-color: var(--bs-white);
}

// Table
.table th {
    border-top: none;
}

// No-wrap buttons of btn-group in a table
.table .btn-group {
    white-space: nowrap;
}

.table .btn-group .btn {
    display: inline-block;
    float: none;
}

.table .btn-group .btn + .btn {
    margin-left: -5px;
}

.table-hover > tbody > tr.no-hover:hover {
    --bs-table-hover-bg: none;
}

// Custom list group header class with a slightly darker background.
.list-group-header {
    background-color: $card-cap-bg;
}

// Forms and inputs

.validation-message {
    color: $danger;
}

.invalid {
    outline: 1px solid $danger;
}

.form-switch input,
.form-switch label {
    cursor: pointer;
}

.form-switch input:disabled,
.form-switch input:disabled + label {
    cursor: default;
}

// Execution Gantt graph

.progress-bar.running {
    background-color: $primary;
}

.progress-bar.succeeded {
    background-color: $success;
}

.progress-bar.failed {
    background-color: $danger;
}

.progress-bar.skipped {
    background-color: #aaa;
}

.progress-bar.stopped {
    background-color: $warning;
}

.progress-bar.duplicate {
    background-color: $warning;
}

.progress-bar.awaitretry {
    background-color: $warning;
}

.progress-bar.warning {
    background-color: $warning;
}

.progress-bar.suspended {
    background-color: $danger;
}

.gantt-row:hover {
    background-color: rgba(0, 0, 0, 0.075);
}


// Dependency graph
.dependency-graph {
    width: 100%;
    height: 100%;
}

.dependency-graph svg {
    width: 100%;
    height: 100%;
    cursor: move;
}

.dependency-graph .node {
    cursor: pointer;
}

.dependency-graph .node rect {
    stroke-width: 2px;
    stroke: var(--bs-body-color);
    fill: var(--bs-body-bg);
}

.dependency-graph .node > g.label {
    fill: var(--bs-body-color);
}

.dependency-graph .node.disabled rect {
    fill: var(--bs-tertiary-bg);
    stroke: var(--bs-secondary);
}

.dependency-graph .node.disabled > g.label {
    fill: var(--bs-secondary);
}

.dependency-graph .node.running rect {
    stroke: $primary;
    stroke-width: 3px;
}

.dependency-graph .node.succeeded rect {
    stroke: $success;
    stroke-width: 3px;
}

.dependency-graph .node.failed rect {
    stroke: $danger;
    stroke-width: 3px;
}

.dependency-graph .node.skipped rect {
    stroke: var(--bs-secondary);
    stroke-width: 3px;
}

.dependency-graph .node.skipped > g.label {
    fill: var(--bs-secondary-color);
}

.dependency-graph .node.stopped rect {
    stroke: $warning;
    stroke-width: 3px;
}

.dependency-graph .node.duplicate rect {
    stroke: $warning;
    stroke-width: 3px;
}

.dependency-graph .node.awaitretry rect {
    stroke: $warning;
    stroke-width: 3px;
}

.dependency-graph .name {
    margin-top: 4px;
}

.dependency-graph .edgePath path {
    stroke: #888;
    stroke-width: 2px;
    fill: #888;
}

.dependency-graph .edgePath.onsucceeded path {
    stroke: $success;
    fill: $success;
}

.dependency-graph .edgePath.oncompleted path {
    stroke: $primary;
    fill: $primary;
}

.dependency-graph .edgePath.onfailed path {
    stroke: $danger;
    fill: $danger;
}


// Feather icons
.feather {
    width: 16px;
    height: 16px;
    vertical-align: text-bottom;
}

.tag-remove .feather {
    width: 14px;
    height: 14px;
}

.tag-remove:hover {
    cursor: pointer;
}


// Sidebar
.sidebar {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    width: 200px;
    z-index: 100; /* Behind the navbar */
    padding: 55px 0 0; /* Height of navbar */
    background-color: var(--bs-body-bg);
    box-shadow: 0 0.3rem .5rem rgb(0 0 0 / 50%)
}

// Empty space between top bar and navigation menu with smaller screens (in case there are buttons on the top bar)
@media (max-width: 992px) {
    .sidebar {
        padding: 135px 0 0;
    }
}

@media (min-width: 992px) {
    .main {
        padding-right: 15px !important;
        padding-left: 215px !important; // (sidebar width) + (padding right)
    }
}


.sidebar-sticky {
    position: relative;
    top: 0;
    height: calc(100vh - 48px);
    /*padding-top: .5rem;*/
    overflow-x: hidden;
    overflow-y: auto; // Scrollable contents if viewport is shorter than content.
}

@supports ((position: -webkit-sticky) or (position: sticky)) {
    .sidebar-sticky {
        position: -webkit-sticky;
        position: sticky;
    }
}

.sidebar .nav-link {
    font-size: 15px;
    color: var(--bs-body-color);
    border-radius: .5rem;
    margin-left: 8px;
    margin-right: 8px;
    margin-top: 3px;
    margin-bottom: 3px;
    padding-left: 8px;
    padding-right: 8px;
    padding-top: 5px;
    padding-bottom: 5px;
}

.sidebar .nav-link .feather {
    margin-right: 5px;
    color: var(--bs-secondary-color);
}

.sidebar .nav-link.active {
    font-weight: 500;
    color: var(--bs-emphasis-color);
}

.sidebar .nav-link.active .feather,
.sidebar .nav-link:hover .feather {
    color: var(--bs-emphasis-color);
}

// The background highlight for active and hovered items is different for light and dark theme.
[data-bs-theme="light"], [data-bs-theme="auto"] {

    .sidebar .nav-link.active {
        background-color: tint-color($primary, 75%);
    }

    .sidebar .nav-link:hover {
        background-color: tint-color($primary, 75%);
        color: var(--bs-emphasis-color);
    }
}

[data-bs-theme="dark"] {

    .sidebar .nav-link.active {
        background-color: shade-color($primary, 55%);
    }

    .sidebar .nav-link:hover {
        background-color: shade-color($primary, 55%);
        color: var(--bs-emphasis-color);
    }
}

.sidebar-heading {
    font-size: .75rem;
    text-transform: uppercase;
}


// Navbar

.bg-gradient-primary {
    background-image: linear-gradient(90deg, $primary 0%, $navbar-gradient 100%);
}

.navbar-custom {
    /*background-color: #313A46;*/
    z-index: 1050;
}

// Change the brand and text color
.navbar-custom .navbar-brand,
.navbar-custom .navbar-nav {
    color: #fff;
}

.navbar-custom .navbar-text {
    color: #eee;
}

.navbar-brand {
    padding-top: .75rem;
    padding-bottom: .75rem;
    font-weight: bold;
    width: 100%;
}

@media (min-width: 992px) {
    .navbar-brand {
        width: 200px;
    }

    // Never collapse the sidebar for wide screens
    .sidebar.collapse {
        display: block;
    }
}

.navbar-brand-bg {
    background-color: rgba(0, 0, 0, .2);
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .2);
}

.navbar .navbar-toggler {
    top: .25rem;
    right: 1rem;
}

// Blazor error component
#blazor-error-ui {
    bottom: 0;
    display: none;
    left: 0;
    position: fixed;
    width: 96vw;
    z-index: 1050;
    margin-bottom: 2rem;
    margin-left: 2vw;
    margin-right: 2vw;
}