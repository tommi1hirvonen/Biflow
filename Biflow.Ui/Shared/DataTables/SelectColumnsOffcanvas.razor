<HxOffcanvas @ref="Offcanvas" Size="OffcanvasSize.Small" Title="Select columns" Backdrop="OffcanvasBackdrop.False" ScrollingEnabled="true">
    <BodyTemplate>
        @if (ColumnSelections is not null)
        {
            @foreach (var column in ColumnSelections.Keys)
            {
                <div class="row mt-2">
                    <div class="col">
                        <div class="form-check form-check-inline">
                            <input type="checkbox" class="form-check-input" id="column_select_@column"
                                    checked=@ColumnSelections[column] @onchange="args => SelectionChanged(args, column)">
                            <label class="form-check-label" for="column_select_@column">
                                &nbsp;
                                @column
                            </label>
                        </div>
                    </div>
                </div>
            }
        }

    </BodyTemplate>
</HxOffcanvas>

@code {
    [Parameter] public EventCallback OnSelectionsChanged { get; set; }

    [Parameter] public Dictionary<string, bool>? ColumnSelections {get;set;}

    private HxOffcanvas? Offcanvas { get; set; }

    private async Task SelectionChanged(ChangeEventArgs args, string column)
    {
        var value = (bool)args.Value!;
        @if (ColumnSelections is not null)
        {
            ColumnSelections[column] = value;    
        }
        await OnSelectionsChanged.InvokeAsync();
    }


    public Task ShowAsync() => Offcanvas.LetAsync(x => x.ShowAsync());
}
