@if (EditJob is null || Steps is null)
{
    <div class="row mt-3">
        <div class="col text-center">
            <HxSpinner Color="ThemeColor.Secondary" />
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col">
            <HxButtonToolbar>
                <HxSubmit form="job_parameter_form" Color="ThemeColor.Success">
                    <CxIcon Icon="FeatherIcon.Save" />
                    Save
                </HxSubmit>
                <HxButton Color="ThemeColor.Secondary" CssClass="ms-3" @onclick="AddParameter">
                    <CxIcon Icon="FeatherIcon.Plus" />
                    Add parameter
                </HxButton>
            </HxButtonToolbar>
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <p class="text-danger mt-1">@ErrorMessage</p>
            }
        </div>
        <div class="col text-end">
            <HxPopover Placement="PopoverPlacement.Bottom" Trigger="PopoverTrigger.Focus"
                        Content="@("<p>Job parameters can be passed to steps that support parameterization.</p><p>Use job parameters to define common parameters across all steps.</p><p>SQL steps can even edit job parameter values during execution.</p>")"
                Html>
                <HxButton Color="ThemeColor.None" Size="ButtonSize.Small" CssClass="btn-auto">
                    <CxIcon Icon="FeatherIcon.HelpCircle" />
                </HxButton>
            </HxPopover>
        </div>
    </div>
    @if (Context?.ChangeTracker.HasChanges() ?? false)
    {
        <NavigationLock ConfirmExternalNavigation OnBeforeInternalNavigation="OnBeforeInternalNavigation" />
    }
    <div class="row my-4">
        <div class="col">
            <div class="card shadow-sm">
                <EditForm id="job_parameter_form" Model="EditJob" OnValidSubmit="SubmitParameters">
                    <table id="parameters_table" class="table table-sm">
                        <thead>
                            <tr>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Type
                                </th>
                                <th>
                                    Value
                                </th>
                                <th>
                                    Inheriting steps
                                    <HxPopover Content="Inheriting steps are any steps in this job that are referencing the job's parameters"
                                               Trigger="PopoverTrigger.Hover">
                                        <CxIcon Icon="FeatherIcon.Info" />
                                    </HxPopover>
                                </th>
                                <th>
                                    Assigning steps
                                    <HxPopover Content="Assigning steps are steps in other jobs that are launching this job and assigning values to the job's parameters"
                                               Trigger="PopoverTrigger.Hover">
                                        <CxIcon Icon="FeatherIcon.Info" />
                                    </HxPopover>
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!EditJob?.JobParameters?.Any() ?? true)
                            {
                                <tr><td colspan="6">No parameters</td></tr>
                            }
                            @foreach (var param in EditJob?.JobParameters ?? Enumerable.Empty<JobParameter>())
                            {
                                var inheritingSteps = GetInheritingSteps(param).ToList();
                                var assigningSteps = GetAssigningSteps(param).ToList();
                                <tr>
                                    <td>
                                        <HxInputText InputSize="InputSize.Small" @bind-Value="param.ParameterName" placeholder="Name"></HxInputText>
                                    </td>
                                    <ParameterTypeValueEditComponent Parameter="param" />
                                    <td>
                                        @if (inheritingSteps.Count > 0)
                                        {
                                            <a href="javascript:void(0)" @onclick="() => ShowInheritingStepsOffcanvasAsync(param)">
                                                @inheritingSteps.Count step(s)
                                            </a>
                                        }
                                        else
                                        {
                                            <span>0 steps</span>
                                        }
                                    </td>
                                    <td>
                                        @if (assigningSteps.Count > 0)
                                        {
                                            <a href="javascript:void(0)" @onclick="() => ShowAssigningStepsOffcanvasAsync(param)">
                                                @assigningSteps.Count step(s)
                                            </a>
                                        }
                                        else
                                        {
                                            <span>0 steps</span>
                                        }
                                    </td>
                                    <td>
                                        <HxButtonGroup Size="ButtonGroupSize.Small">
                                            <HxButton Color="ThemeColor.None" Size="ButtonSize.Small" CssClass="btn-auto" @onclick="() => EditJob?.JobParameters.Remove(param)">
                                                <CxIcon Icon="FeatherIcon.Delete" />
                                            </HxButton>
                                        </HxButtonGroup>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </EditForm>
            </div>
        </div>
    </div>
}

<HxOffcanvas @ref="InheritingStepsOffcanvas" Title="@($"Steps inheriting {InheritingSteps.Parameter.ParameterName}")">
    <BodyTemplate>
        <table class="table table-sm">
            <thead>
                <tr>
                    <th>
                        Step
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var step in InheritingSteps.ReferencingSteps)
                {
                    <tr>
                        <td>
                            <StepTypeIconComponent StepType_="step.StepType" />
                            @step.StepName
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </BodyTemplate>
    <FooterTemplate>
        <HxButton Color="ThemeColor.Secondary" OnClick="() => InheritingStepsOffcanvas.LetAsync(x => x.HideAsync())">
            Close
        </HxButton>
    </FooterTemplate>
</HxOffcanvas>

<HxOffcanvas @ref="AssigningStepsOffcanvas" Title="@($"Steps assigning {AssigningSteps.Parameter.ParameterName}")">
    <BodyTemplate>
        <table class="table table-sm">
            <thead>
                <tr>
                    <th>
                        Job
                    </th>
                    <th>
                        Step
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var step in AssigningSteps.ReferencingSteps)
                {
                    <tr>
                        <td>
                            @step.Job.JobName
                        </td>
                        <td>
                            <StepTypeIconComponent StepType_="step.StepType" />
                            @step.StepName
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </BodyTemplate>
    <FooterTemplate>
        <HxButton Color="ThemeColor.Secondary" OnClick="() => AssigningStepsOffcanvas.LetAsync(x => x.HideAsync())">
            Close
        </HxButton>
    </FooterTemplate>
</HxOffcanvas>