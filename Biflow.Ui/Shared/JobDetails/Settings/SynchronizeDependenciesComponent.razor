
<div class="row">
    <div class="col">
        <small class="text-secondary">Automatically calculate modifications to dependencies based on step sources and targets. Changes can be accepted one at a time or all at once.</small>
    </div>
</div>
<div class="row mt-3">
    <div class="col">
        <HxButton Size="ButtonSize.Regular" Color="ThemeColor.Primary" OnClick="CalculateChangesAsync">
            <CxIcon Icon="FeatherIcon.RefreshCw" />
            Calculate changes
        </HxButton>
    </div>
</div>
<div class="row mt-3">
    <div class="col">
        <table class="table table-sm">
            <thead>
                <tr>
                    <th>Step</th>
                    <th>Depends on</th>
                    <th>Type</th>
                    <th>Action</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (DependenciesToAdd is null || DependenciesToRemove is null)
                {
                    <tr class="text-secondary small">
                        <td colspan="5">Click on Calculate changes to preview modifications</td>
                    </tr>
                }
                else if (!DependenciesToAdd.Any() && !DependenciesToRemove.Any())
                {
                    <tr>
                        <td colspan="5">No changes detected</td>
                    </tr>
                }
                else
                {
                    <NavigationLock ConfirmExternalNavigation OnBeforeInternalNavigation="OnBeforeInternalNavigation" />
                    @foreach (var dep in DependenciesToAdd)
                    {
                        var addCheckId = $"strict_{dep.StepId}_{dep.DependantOnStepId}";
                        <tr class="text-primary">
                            <td class="align-middle">
                                <StepTypeIconComponent StepType_="dep.Step.StepType" />
                                @dep.Step.StepName
                            </td>
                            <td class="align-middle">
                                <StepTypeIconComponent StepType_="dep.DependantOnStep.StepType" />
                                @dep.DependantOnStep.StepName
                            </td>
                            <td class="align-middle">
                                <select class="form-select form-select-sm" @bind="dep.DependencyType">
                                    @foreach (var type in Enum.GetValues<DependencyType>())
                                    {
                                        <option selected=@(dep.DependencyType == type)>@type</option>
                                    }
                                </select>
                            </td>
                            <td class="align-middle">
                                Add
                            </td>
                            <td>
                                <HxButtonGroup Size="ButtonGroupSize.Small">
                                    <HxButton Size="ButtonSize.Small" Color="ThemeColor.None"
                                        title="Commit this modification"
                                        CssClass="btn-auto text-success" OnClick="async () => await AddDependencyAsync(dep)">
                                        <CxIcon Icon="FeatherIcon.Check" />
                                    </HxButton>
                                    <HxButton Size="ButtonSize.Small" Color="ThemeColor.None"
                                        title="Discard this modification"
                                        CssClass="btn-auto text-danger" OnClick="() => DependenciesToAdd.Remove(dep)">
                                        <CxIcon Icon="FeatherIcon.X" />
                                    </HxButton>
                                </HxButtonGroup>
                            </td>
                        </tr>
                    }
                    @foreach (var dep in DependenciesToRemove)
                    {
                        var removeCheckId = $"strict_{dep.StepId}_{dep.DependantOnStepId}";
                        <tr class="text-danger">
                            <td class="align-middle">
                                <StepTypeIconComponent StepType_="dep.Step.StepType" />
                                @dep.Step.StepName
                            </td>
                            <td class="align-middle">
                                <StepTypeIconComponent StepType_="dep.DependantOnStep.StepType" />
                                @dep.DependantOnStep.StepName
                            </td>
                            <td class="align-middle">
                                @dep.DependencyType
                            </td>
                            <td class="align-middle">
                                Remove
                            </td>
                            <td>
                                <HxButtonGroup Size="ButtonGroupSize.Small">
                                    <HxButton Size="ButtonSize.Small" Color="ThemeColor.None"
                                        title="Commit this modification"
                                        CssClass="btn-auto text-success" OnClick="async () => await RemoveDependencyAsync(dep)">
                                        <CxIcon Icon="FeatherIcon.Check" />
                                    </HxButton>
                                    <HxButton Size="ButtonSize.Small" Color="ThemeColor.None"
                                        title="Discard this modification"
                                        CssClass="btn-auto text-danger" OnClick="() => DependenciesToRemove.Remove(dep)">
                                        <CxIcon Icon="FeatherIcon.X" />
                                    </HxButton>
                                </HxButtonGroup>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <div class="row">
            <div class="col">
                @if (DependenciesToRemove?.Any() ?? false)
                {
                    <small class="text-secondary">Dependency removal is only suggested for steps which have at least one source defined.</small>
                }
            </div>
        </div>
    </div>
</div>
@if ((DependenciesToAdd?.Any() ?? false) || (DependenciesToRemove?.Any() ?? false))
{
    <div class="row mt-3">
        <div class="col">
            <HxButton Color="ThemeColor.Success" OnClick="CommitAllAsync">
                <CxIcon Icon="FeatherIcon.Check" />
                Commit all
            </HxButton>
        </div>
    </div>
}
