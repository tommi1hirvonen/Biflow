<HxModal @ref="Modal" Size="ModalSize.Large" Title="@Step?.StepName">
    <BodyTemplate>
        @if (Step is not null)
        {
            <div class="row">
                <div class="col">
                    <table class="table table-sm">
                        <tbody class="border-top">
                            <tr>
                                <td class="fw-bold w-25">Step name</td>
                                <td>@Step.StepName</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Description</td>
                                <td>@Step.StepDescription</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Execution phase</td>
                                <td>@Step.ExecutionPhase</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Step type</td>
                                <td>@Step.StepType</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Retry attempts</td>
                                <td>@Step.RetryAttempts</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Retry interval (min)</td>
                                <td>@Step.RetryIntervalMinutes</td>
                            </tr>
                            <tr>
                                <td class="fw-bold">Duplicate execution behaviour</td>
                                <td>@Step.DuplicateExecutionBehaviour</td>
                            </tr>
                            @if (Step is IHasTimeout timeout)
                            {
                                <tr>
                                    <td class="fw-bold">Timeout (min)</td>
                                    <td>@timeout.TimeoutMinutes</td>
                                </tr>
                            }
                            @if (Step is SqlStep sql)
                            {
                                <tr>
                                    <td class="fw-bold">SQL statement</td>
                                    <td>
                                        <pre class="my-0"><code>@sql.SqlStatement</code></pre>
                                    </td>
                                </tr>
                            }
                            else if (Step is PipelineStep pipeline)
                            {
                                <tr>
                                    <td class="fw-bold">Pipeline name</td>
                                    <td>@pipeline.PipelineName</td>
                                </tr>
                            }
                            else if (Step is JobStep job)
                            {
                                <tr>
                                    <td class="fw-bold">Job to execute</td>
                                    <td>@job.JobToExecuteId</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Synchronized</td>
                                    <td>@job.JobExecuteSynchronized</td>
                                </tr>
                            }
                            else if (Step is ExeStep exe)
                            {
                                <tr>
                                    <td class="fw-bold">File path</td>
                                    <td>@exe.ExeFileName</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Arguments</td>
                                    <td>@exe.ExeArguments</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Working directory</td>
                                    <td>@exe.ExeWorkingDirectory</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Success exit code</td>
                                    <td>@exe.ExeSuccessExitCode</td>
                                </tr>
                            }
                            else if (Step is DatasetStep dataset)
                            {
                                <tr>
                                    <td class="fw-bold">Group id</td>
                                    <td>@dataset.DatasetGroupId</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Dataset id</td>
                                    <td>@dataset.DatasetId</td>
                                </tr>
                            }
                            else if (Step is PackageStep package)
                            {
                                <tr>
                                    <td class="fw-bold">Package folder</td>
                                    <td>@package.PackageFolderName</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Package project</td>
                                    <td>@package.PackageProjectName</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Package name</td>
                                    <td>@package.PackageName</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">32 bit mode</td>
                                    <td>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" class="custom-control-input" disabled checked="@(package.ExecuteIn32BitMode ? "checked" : null)">
                                            <label class="custom-control-label"></label>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Execute as login</td>
                                    <td>@package.ExecuteAsLogin</td>
                                </tr>
                            }
                            else if (Step is FunctionStep function)
                            {
                                <tr>
                                    <td class="fw-bold">Function url</td>
                                    <td>@function.FunctionUrl</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Function input</td>
                                    <td><pre class="my-0"><code>@function.FunctionInput</code></pre></td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Function App id</td>
                                    <td>@function.FunctionAppId</td>
                                </tr>
                            }
                            else if (Step is AgentJobStep agent)
                            {
                                <tr>
                                    <td class="fw-bold">Agent job name</td>
                                    <td>@agent.AgentJobName</td>
                                </tr>
                            }
                            else if (Step is TabularStep tabular)
                            {
                                <tr>
                                    <td class="fw-bold">Model name</td>
                                    <td>@tabular.TabularModelName</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Table name</td>
                                    <td>@tabular.TabularTableName</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Partition name</td>
                                    <td>@tabular.TabularPartitionName</td>
                                </tr>
                            }
                            else if (Step is EmailStep email)
                            {
                                <tr>
                                    <td class="fw-bold">Recipients</td>
                                    <td>@email.Recipients</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Subject</td>
                                    <td>@email.Subject</td>
                                </tr>
                                <tr>
                                    <td class="fw-bold">Body</td>
                                    <td>@email.Body</td>
                                </tr>
                            }
                            <tr>
                                <td class="fw-bold">Execution condition</td>
                                <td>
                                    <pre class="my-0"><code>@Step.ExecutionConditionExpression.Expression</code></pre>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <h6>Execution condition parameters</h6>
            <div class="row">
                <div class="col">
                    <table class="table table-sm">
                        <tbody class="border-top">
                            @{
                                var executionConditionParameters = Step.ExecutionConditionParameters ?? Enumerable.Empty<ExecutionConditionParameter>();
                            }
                            @if (!executionConditionParameters.Any())
                            {
                                <tr><td class="small">No execution condition parameters</td></tr>
                            }
                            @foreach (var param in Step.ExecutionConditionParameters ?? Enumerable.Empty<ExecutionConditionParameter>())
                            {
                                <tr>
                                    <td class="fw-bold w-25">
                                        @param.DisplayName
                                    </td>
                                    <td>
                                        @param.DisplayValue
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            @if (Step is IHasStepParameters hasParams)
            {
                <h6>Parameters</h6>
                <div class="row">
                    <div class="col">
                        <table class="table table-sm">
                            <tbody class="border-top">
                                @if (!hasParams.StepParameters.Any())
                                {
                                    <tr><td class="small">No parameters</td></tr>
                                }
                                @foreach (var param in hasParams.StepParameters)
                                {
                                    <tr>
                                        <td class="fw-bold w-25">@param.DisplayName</td>
                                        <td>@param.DisplayValue</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        }
    </BodyTemplate>
    
    <FooterTemplate>
        <HxButton Color="ThemeColor.Secondary" Spinner="false" @onclick="async () => await Modal.LetAsync(x => x.HideAsync())">Close</HxButton>
    </FooterTemplate>
</HxModal>


@code {
    private HxModal? Modal { get; set; }

    private Step? Step { get; set; }

    public async Task ShowAsync(Step step)
    {
        Step = step;
        StateHasChanged();
        await Modal.LetAsync(x => x.ShowAsync());
    }

    public Task HideAsync() => Modal.LetAsync(x => x.HideAsync());
}
