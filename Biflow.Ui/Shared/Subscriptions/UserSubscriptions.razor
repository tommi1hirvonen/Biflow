@inject IHttpContextAccessor HttpContextAccessor
@inject IDbContextFactory<BiflowContext> DbFactory



<div class="row mt-4">
    <div class="col">
        @if (User is not null && string.IsNullOrWhiteSpace(User.Email))
        {
            <HxAlert Color="ThemeColor.Warning" CssClass="mb-3">
                @if (MissingEmailAlertTemplate is not null)
                {
                    @MissingEmailAlertTemplate(User)    
                }
                else
                {
                    <span>
                        Email address for account <strong>@User.Username</strong> was not set. Go to the <a class="alert-link" href="account">Account page</a> to enter a valid email address.
                    </span>
                }
            </HxAlert>
        }
        <div class="row">
            <div class="col">
                <ul class="nav nav-tabs mb-3">
                    <li class="nav-item">
                        <span class="nav-link @(ShowType == SubscriptionType.Job ? "active" : null)"
                        @onclick="() => ShowType = SubscriptionType.Job">
                            Job subscriptions
                        </span>
                    </li>
                    <li class="nav-item">
                        <span class="nav-link @(ShowType == SubscriptionType.JobTag ? "active" : null)"
                        @onclick="() => ShowType = SubscriptionType.JobTag">
                            Job-tag subscriptions
                        </span>
                    </li>
                    <li class="nav-item">
                        <span class="nav-link @(ShowType == SubscriptionType.Tag ? "active" : null)"
                        @onclick="() => ShowType = SubscriptionType.Tag">
                            Tag subscriptions
                        </span>
                    </li>
                    <li class="nav-item">
                        <span class="nav-link @(ShowType == SubscriptionType.Step ? "active" : null)"
                        @onclick="() => ShowType = SubscriptionType.Step">
                            Step subscriptions
                        </span>
                    </li>
                </ul>
            </div>
        </div>
        @if (ShowType == SubscriptionType.Job)
        {
            <JobSubscriptions User="User" Jobs="Jobs" />
        }
        else if (ShowType == SubscriptionType.JobTag)
        {
            <JobTagSubscriptions User="User" Jobs="Jobs" Steps="Steps" Tags="Tags" />
        }
        else if (ShowType == SubscriptionType.Tag)
        {
            <TagSubscriptions User="User" Tags="Tags" />
        }
        else if (ShowType == SubscriptionType.Step)
        {
            <StepSubscriptions User="User" Jobs="Jobs" Steps="Steps" />
        }
    </div>
</div>

@code {
    [Parameter]
    public User? User { get; set; }

    [Parameter]
    public IEnumerable<JobProjection>? Jobs { get; set; }

    [Parameter]
    public IEnumerable<Tag>? Tags { get; set; }

    [Parameter]
    public IEnumerable<StepProjection>? Steps { get; set; }

    [Parameter]
    public RenderFragment<User>? MissingEmailAlertTemplate { get; set; }

    private SubscriptionType ShowType { get; set; } = SubscriptionType.Job;
}
