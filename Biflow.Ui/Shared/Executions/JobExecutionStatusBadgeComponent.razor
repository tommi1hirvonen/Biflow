
@{
    var (textClass, borderClass, icon) = ExecutionStatus_ switch
    {
        ExecutionStatus.Succeeded => ("text-success", "border-success", FeatherIcon.CheckCircle),
        ExecutionStatus.Failed => ("text-danger", "border-danger", FeatherIcon.AlertOctagon),
        ExecutionStatus.Warning => ("text-warning", "border-warning", FeatherIcon.AlertTriangle),
        ExecutionStatus.Stopped => ("text-warning", "border-warning", FeatherIcon.XOctagon),
        ExecutionStatus.Suspended => ("text-warning", "border-warning", FeatherIcon.AlertTriangle),
        ExecutionStatus.Running => ("text-primary", "border-primary", FeatherIcon.Play),
        ExecutionStatus.NotStarted => ("text-secondary", "border-secondary", FeatherIcon.Clock),
        _ => ("", "", FeatherIcon.HelpCircle)
    };
}

<span class="rounded border d-inline-flex align-items-center fw-semibold @textClass @borderClass"
      style="font-size: 0.8rem; padding-left: 0.3rem; padding-right: 0.3rem; padding-top: 0.1rem; padding-bottom: 0.1rem; border-width: 1.5px !important;">
    <CxIcon Icon="icon" />
    <span class="ms-1">@ExecutionStatus_</span>
</span>

@code {
    [Parameter] public ExecutionStatus? ExecutionStatus_ { get; set; }
}