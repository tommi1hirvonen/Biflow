@if (StepExecutionAttempt is not null)
{
    <div class="row">
        <div class="col">
            <table class="table table-sm">
                <tbody>
                    <tr class="border-top">
                        <td class="fw-bold w-25">Execution id</td>
                        <td>
                            <a href="executions/@StepExecutionAttempt.ExecutionId">
                                @StepExecutionAttempt.ExecutionId
                            </a>
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Step id</td>
                        <td>
                            @if (StepExecutionAttempt.StepExecution.Step is not null)
                            {
                                <a href="jobs/@StepExecutionAttempt.StepExecution.Execution.JobId/steps/@StepExecutionAttempt.StepExecution.Step.StepId">
                                    @StepExecutionAttempt.StepExecution.Step.StepId
                                </a>
                            }
                            else
                            {
                                @StepExecutionAttempt.StepId
                            }
                        </td>
                    </tr>
                    @if (ShowExtraDetails)
                    {
                        <tr>
                            <td class="fw-bold">Started</td>
                            <td>@StepExecutionAttempt.StartDateTime?.LocalDateTime</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Ended</td>
                            <td>@StepExecutionAttempt.EndDateTime?.LocalDateTime</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Duration</td>
                            <td>@StepExecutionAttempt.GetDurationInReadableFormat()</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Status</td>
                            <td>
                                <StepExecutionStatusBadgeComponent ExecutionStatus="@StepExecutionAttempt.ExecutionStatus" />
                            </td>
                        </tr>
                    }
                    @if (StepExecutionAttempt.ExecutionStatus == StepExecutionStatus.Stopped)
                    {
                        <tr>
                            <td class="fw-bold">Stopped by</td>
                            <td>@StepExecutionAttempt.StoppedBy</td>
                        </tr>
                    }
                    <tr>
                        <td class="fw-bold">Retry attempts</td>
                        <td>@StepExecutionAttempt.StepExecution.RetryAttempts</td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Retry interval (min)</td>
                        <td>@StepExecutionAttempt.StepExecution.RetryIntervalMinutes</td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Retry attempt index</td>
                        <td>@StepExecutionAttempt.RetryAttemptIndex</td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Duplicate execution behaviour</td>
                        <td>@StepExecutionAttempt.StepExecution.DuplicateExecutionBehaviour</td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Execution condition</td>
                        <td><pre class="my-0"><code>@StepExecutionAttempt.StepExecution.ExecutionConditionExpression.Expression</code></pre></td>
                    </tr>
                    @if (StepExecutionAttempt.StepExecution is IHasTimeout timeout)
                    {
                        <tr>
                            <td class="fw-bold">Timeout (min)</td>
                            <td>@timeout.TimeoutMinutes</td>
                        </tr>
                    }
                    @if (StepExecutionAttempt.StepExecution is SqlStepExecution sql)
                    {
                        <tr>
                            <td class="fw-bold">SQL statement</td>
                            <td><pre class="my-0"><code>@sql.SqlStatement</code></pre></td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Scalar result capture job parameter</td>
                            <td>
                                @{
                                    var jobParam = sql.Execution.ExecutionParameters
                                    .FirstOrDefault(p => p?.ParameterId == sql.ResultCaptureJobParameterId);
                                }
                                @(jobParam is not null ? $"{jobParam.ParameterName} ({jobParam.ParameterValueType})" : null)
                            </td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Capture value</td>
                            <td>
                                <pre class="my-0"><code style="white-space: pre-wrap;">@sql.ResultCaptureJobParameterValue</code></pre>
                            </td>
                        </tr>
                    }
                    else if (StepExecutionAttempt.StepExecution is PackageStepExecution package)
                    {
                        <tr>
                            <td class="fw-bold">Package path</td>
                            <td>@package.PackagePath</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">32 bit mode</td>
                            <td>@package.ExecuteIn32BitMode</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Execute as login</td>
                            <td>@package.ExecuteAsLogin</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Operation id</td>
                            <td>
                                @if (StepExecutionAttempt is PackageStepExecutionAttempt package__)
                                {
                                    @package__.PackageOperationId
                                }
                            </td>
                        </tr>
                    }
                    else if (StepExecutionAttempt.StepExecution is PipelineStepExecution pipeline)
                    {
                        <tr>
                            <td class="fw-bold">Pipeline name</td>
                            <td>@pipeline.PipelineName</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Pipeline run id</td>
                            <td>
                                @if (StepExecutionAttempt is PipelineStepExecutionAttempt pipeline__)
                                {
                                    @pipeline__.PipelineRunId
                                }
                            </td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Pipeline client id</td>
                            <td>@pipeline.PipelineClientId</td>
                        </tr>
                    }
                    else if (StepExecutionAttempt.StepExecution is ExeStepExecution exe)
                    {
                        <tr>
                            <td class="fw-bold">File path</td>
                            <td>@exe.ExeFileName</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Arguments</td>
                            <td>@exe.ExeArguments</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Working directory</td>
                            <td>@exe.ExeWorkingDirectory</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Success exit code</td>
                            <td>@exe.ExeSuccessExitCode</td>
                        </tr>
                        @if (StepExecutionAttempt is ExeStepExecutionAttempt exe_)
                        {
                            <tr>
                                <td class="fw-bold">Process id</td>
                                <td>@exe_.ExeProcessId</td>
                            </tr>
                        }
                    }
                    else if (StepExecutionAttempt.StepExecution is DatasetStepExecution dataset)
                    {
                        <tr>
                            <td class="fw-bold">Group id</td>
                            <td>@dataset.DatasetGroupId</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Dataset id</td>
                            <td>@dataset.DatasetId</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Power BI Service id</td>
                            <td>@dataset.AppRegistrationId</td>
                        </tr>
                    }
                    else if (StepExecutionAttempt.StepExecution is FunctionStepExecution function)
                    {
                        <tr>
                            <td class="fw-bold">Function url</td>
                            <td>@function.FunctionUrl</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Function input</td>
                            <td><pre class="my-0"><code>@function.FunctionInput</code></pre></td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Is durable</td>
                            <td>@function.FunctionIsDurable</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Function App id</td>
                            <td>@function.FunctionAppId</td>
                        </tr>
                        @if (StepExecutionAttempt is FunctionStepExecutionAttempt function_)
                        {
                            <tr>
                                <td class="fw-bold">Instance id</td>
                                <td>@function_.FunctionInstanceId</td>
                            </tr>
                        }
                    }
                    else if (StepExecutionAttempt.StepExecution is AgentJobStepExecution agent)
                    {
                        <tr>
                            <td class="fw-bold">Agent job name</td>
                            <td>@agent.AgentJobName</td>
                        </tr>
                    }
                    else if (StepExecutionAttempt.StepExecution is TabularStepExecution tabular)
                    {
                        <tr>
                            <td class="fw-bold">Model name</td>
                            <td>@tabular.TabularModelName</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Table name</td>
                            <td>@tabular.TabularTableName</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Partition name</td>
                            <td>@tabular.TabularPartitionName</td>
                        </tr>
                    }
                    else if (StepExecutionAttempt.StepExecution is EmailStepExecution email)
                    {
                        <tr>
                            <td class="fw-bold">Recipients</td>
                            <td>@email.Recipients</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Subject</td>
                            <td>@email.Subject</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Body</td>
                            <td>@email.Body</td>
                        </tr>
                    }
                    else if (StepExecutionAttempt.StepExecution is JobStepExecution job)
                    {
                        <tr>
                            <td class="fw-bold">Synchronized</td>
                            <td>@job.JobExecuteSynchronized</td>
                        </tr>
                        @if (StepExecutionAttempt is JobStepExecutionAttempt job_)
                        {
                            <tr>
                                <td class="fw-bold">Child execution id</td>
                                <td>
                                    <a href="executions/@job_.ChildJobExecutionId">
                                        @job_.ChildJobExecutionId
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else if (StepExecutionAttempt.StepExecution is QlikStepExecution qlik)
                    {
                        <tr>
                            <td class="fw-bold">App id</td>
                            <td>@qlik.AppId</td>
                        </tr>
                        <tr>
                            <td class="fw-bold">Qlik Cloud Client id</td>
                            <td>@qlik.QlikCloudClientId</td>
                        </tr>
                        @if (StepExecutionAttempt is QlikStepExecutionAttempt qlik_)
                        {
                            <tr>
                                <td class="fw-bold">Reload id</td>
                                <td>@qlik_.ReloadId</td>
                            </tr>
                        }
                    }
                    <tr>
                        <td class="fw-bold">Info messages / outputs</td>
                        <td>
                            @foreach (var info in StepExecutionAttempt.InfoMessages)
                            {
                                <code class="text-body" style="white-space: pre-wrap; display: block;">
                                    @info.Message
                                </code>
                            }
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Error messages</td>
                        <td>
                            @foreach (var error in StepExecutionAttempt.ErrorMessages)
                            {
                                <code class="text-danger" style="white-space: pre-wrap; display: block;">
                                    @error.Message
                                </code>
                                <AuthorizeView Roles="@($"{Roles.Admin}, {Roles.Editor}")">
                                    @if (ShowErrorStackTrace && !string.IsNullOrWhiteSpace(error.Exception))
                                    {
                                        <br />
                                        <code class="text-body" style="white-space: pre-wrap; display: block;">@error.Exception</code>
                                    }
                                </AuthorizeView>
                            }
                            <AuthorizeView Roles="@($"{Roles.Admin}, {Roles.Editor}")">
                                @if (!ShowErrorStackTrace && StepExecutionAttempt.ErrorMessages.Any(e => !string.IsNullOrEmpty(e.Exception)))
                                {
                                    <div class="mt-2">
                                        <small>
                                            <a class="text-secondary" href="javascript:void(0);" @onclick="() => ShowErrorStackTrace = true">
                                                Stack trace available
                                            </a>
                                        </small>
                                    </div>
                                }
                            </AuthorizeView>
                        </td>
                    </tr>
                    <tr>
                        <td class="fw-bold">Warning messages</td>
                        <td>
                            @foreach (var warning in StepExecutionAttempt.WarningMessages)
                            {
                                <code class="text-danger" style="white-space: pre-wrap; display: block;">
                                    @warning.Message
                                </code>
                                <AuthorizeView Roles="@($"{Roles.Admin}, {Roles.Editor}")">
                                    @if (ShowWarningStackTrace && !string.IsNullOrWhiteSpace(warning.Exception))
                                    {
                                        <br />
                                        <code class="text-body" style="white-space: pre-wrap; display: block;">@warning.Exception</code>
                                    }
                                </AuthorizeView>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <h6>Execution condition parameters</h6>
    <div class="row">
        <div class="col">
            <table class="table table-sm">
                <tbody class="border-top">
                    @{
                        var executionConditionParameters = StepExecutionAttempt.StepExecution.ExecutionConditionParameters
                            ?? Enumerable.Empty<StepExecutionConditionParameter>();
                    }
                    @if (!executionConditionParameters.Any())
                    {
                        <tr><td class="small">No execution condition parameters</td></tr>
                    }
                    @foreach (var param in StepExecutionAttempt.StepExecution.ExecutionConditionParameters ?? Enumerable.Empty<StepExecutionConditionParameter>())
                    {
                        <tr>
                            <td class="fw-bold w-25">@param.DisplayName</td>
                            <td>@param.DisplayValue</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
    </div>
    @if (StepExecutionAttempt.StepExecution is IHasStepExecutionParameters hasParams)
    {
        <h6>Parameters</h6>
        <div class="row">
            <div class="col">
                <table class="table table-sm">
                    <tbody class="border-top">
                        @{
                            var parameters = hasParams.StepExecutionParameters ?? Enumerable.Empty<StepExecutionParameterBase>();
                        }
                        @if (!parameters.Any())
                        {
                            <tr><td class="small">No parameters</td></tr>
                        }
                        @foreach (var param in hasParams.StepExecutionParameters ?? Enumerable.Empty<StepExecutionParameterBase>())
                        {
                            <tr>
                                <td class="fw-bold w-25">
                                    @param.DisplayName
                                </td>
                                <td>
                                    @param.DisplayValue
                                    @if (param.UseExpression && param.ExpressionParameters.Any())
                                    {
                                        var expressionParameters = param.ExpressionParameters.Select(p => $"<p><small>{p.ParameterName} = {p.InheritFromExecutionParameter.DisplayValue}</small></p>");
                                        var content = string.Join("\n", expressionParameters);
                                        <HxPopover Trigger="PopoverTrigger.Hover" Content="@content" Html>
                                            <small class="text-decoration-underline ms-2">Expression parameters</small>
                                        </HxPopover>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}


@code {
    [Parameter]
    public StepExecutionAttempt? StepExecutionAttempt { get; set; }

    [Parameter]
    public bool ShowExtraDetails { get; set; } = false;

    private bool ShowErrorStackTrace { get; set; } = false;

    private bool ShowWarningStackTrace { get; set; } = false;
}
