
<HxOffcanvas @ref="Offcanvas" Size="OffcanvasSize.Large" BackdropEnabled="false" ScrollingEnabled="true" Title="Explore database objects">
    <BodyTemplate>
        <div class="row">
            <div class="col-sm-2">
                <label class="form-label">Connection</label>
            </div>
            <div class="col-sm-5">
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        @MarkupHelper.FromFile("icons/feather/database.svg")
                    </div>
                    <select class="form-select form-select-sm" @bind="ConnectionId">
                        @foreach (var connection in Connections ?? Enumerable.Empty<SqlConnectionInfo>())
                        {
                            <option value="@connection.ConnectionId">@connection.ConnectionName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-sm-5 mt-3 mt-sm-0">
                <HxButton Color="ThemeColor.Primary" Size="ButtonSize.Small" OnClick="RunQueryAsync" Enabled="QueryTask?.IsCompleted ?? true">
                    @MarkupHelper.FromFile("icons/feather/refresh-cw.svg")
                    Get objects
                </HxButton>
                @if (!QueryTask?.IsCompleted ?? false)
                {
                    <HxButton CssClass="ms-3" Color="ThemeColor.Secondary" Size="ButtonSize.Small" OnClick="CancelQuery">
                        Cancel
                    </HxButton>
                }
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-sm-2">
                <label class="form-label">Filter by</label>
            </div>
            <div class="col-sm-8">
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        @MarkupHelper.FromFile("icons/feather/filter.svg")
                    </div>
                    <input type="search" class="form-control" @bind-value="SchemaFilter" @bind-value:event="oninput" placeholder="Schema" />
                    <input type="search" class="form-control" @bind-value="ObjectFilter" @bind-value:event="oninput" placeholder="Object" />
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <table class="table table-sm table-hover small">
                    <thead>
                        <tr>
                            <th>Schema</th>
                            <th>Object</th>
                            <th>Type</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var dbObject in FilteredDatabaseObjects)
                        {
                            var className = SelectedObject?.Equals(dbObject) ?? false ? "fw-bold" : null;
                            <tr class="@className" style="cursor: pointer;" @onclick="() => SelectedObject = dbObject">
                                <td><HighlightableText Text="@dbObject.Schema" PartToHighlight="@SchemaFilter" /></td>
                                <td><HighlightableText Text="@dbObject.Object" PartToHighlight="@ObjectFilter" /></td>
                                <td>@dbObject.Type</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </BodyTemplate>
    <FooterTemplate>
        <HxButton Color="ThemeColor.Primary" Spinner="false" OnClick="OnDbObjectSelectedAsync" Enabled="SelectedObject is not null">Select</HxButton>
        <HxButton Color="ThemeColor.Secondary" Spinner="false" OnClick="Offcanvas.HideAsync" CssClass="ms-3">Close</HxButton>
    </FooterTemplate>
</HxOffcanvas>