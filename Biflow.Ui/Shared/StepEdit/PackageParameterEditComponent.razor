
@if (Step is not null)
{
    <p />
    <h5>Parameters</h5>
    <table id="parameters_table" class="table table-sm">
        <thead>
            <tr>
                <th>Level</th>
                <th>Name</th>
                <th>Inherit from job</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (!Step.StepParameters.Any())
            {
                <tr><td colspan="6">No parameters</td></tr>
            }
            @foreach (var param in Step.StepParameters)
            {
                <tr>
                    <td>
                        <div class="input-group">
                            <InputSelect class="form-select form-select-sm" @bind-Value="param.ParameterLevel">
                                <option>@ParameterLevel.Package</option>
                                <option>@ParameterLevel.Project</option>
                            </InputSelect>
                        </div>
                    </td>
                    <td>
                        <HxInputText InputSize="InputSize.Small" @bind-Value="param.ParameterName" placeholder="Name"></HxInputText>
                    </td>
                    <td class="align-middle">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="inherit_@(param.ParameterId)"
                                   checked=@(param.InheritFromJobParameterId is not null)
                                   disabled=@(!JobParameters.Any())
                                   @onchange="args => SetJobParameter((bool)args.Value!, param)">
                            <label class="form-check-label" for="inherit_@(param.ParameterId)"></label>
                        </div>
                    </td>
                    @if (param.InheritFromJobParameterId is not null)
                    {
                        <td colspan="2">
                            <InputSelect class="form-select form-select-sm" @bind-Value="param.InheritFromJobParameterId">
                                @foreach (var jobParam in JobParameters.OrderBy(p => p.ParameterName))
                                            {
                                    <option value="@jobParam.ParameterId">
                                        @jobParam.ParameterName (@jobParam.ParameterValueType = @jobParam.ParameterValue)
                                    </option>
                                            }
                            </InputSelect>
                        </td>
                    }
                    else
                    {
                        <ParameterTypeValueEditComponent Parameter="param" />
                    }
                    <td>
                        <HxButtonGroup Size="ButtonGroupSize.Small">
                            <HxButton Color="ThemeColor.None" Size="ButtonSize.Small" CssClass="btn-auto" @onclick="() => Step.StepParameters.Remove(param)">
                                <CxIcon Icon="FeatherIcon.Delete" />
                            </HxButton>
                        </HxButtonGroup>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <HxButton Color="ThemeColor.None" CssClass="btn-auto" Size="ButtonSize.Small" @onclick="() => Step.StepParameters.Add(new(ParameterLevel.Package))">
        <CxIcon Icon="FeatherIcon.Plus" />
        Add parameter
    </HxButton>
}

@code {
    [Parameter] public PackageStep? Step { get; set; }

    private IEnumerable<JobParameter> JobParameters => (Step as Step)?.Job.JobParameters ?? Enumerable.Empty<JobParameter>();

    private void SetJobParameter(bool inheritFromJob, PackageStepParameter param)
    {
        if (inheritFromJob)
        {
            param.InheritFromJobParameterId = JobParameters.FirstOrDefault()?.ParameterId;
        }
        else
        {
            param.InheritFromJobParameterId = null;
        }
    }
}
