@inject SqlServerHelperService SqlServerHelper
@inject ToasterService Toaster

<HxOffcanvas @ref="offcanvas" Size="OffcanvasSize.Large" Backdrop="OffcanvasBackdrop.False" ScrollingEnabled="true" Title="Explore SQL references">
    <BodyTemplate>
        <div class="row">
            <div class="col-auto">
                <label class="form-label">Connection</label>
            </div>
            <div class="col-auto">
                <div class="input-group">
                    <div class="input-group-text">
                        <SvgIcon Icon="FeatherIcon.Database" />
                    </div>
                    <select class="form-select form-select-sm" @bind="connectionId">
                        @foreach (var connection in Connections ?? [])
                        {
                            <option value="@connection.ConnectionId">@connection.ConnectionName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-auto">
                <HxButton Color="ThemeColor.Primary" Size="ButtonSize.Small" OnClick="RunQueryAsync">
                    <SvgIcon Icon="FeatherIcon.RefreshCw" />
                    Run query
                </HxButton>
                <HxButton Color="ThemeColor.Secondary" Size="ButtonSize.Small" CssClass="ms-3" OnClick="ClearFilters">
                    <SvgIcon Icon="FeatherIcon.X" />
                    Clear filters
                </HxButton>
            </div>
        </div>
        <div class="row mt-1"><div class="col"><div class="form-text">Querying a large database without filters may be a heavy operation.</div></div></div>
        <div class="row mt-3">
            <div class="col">
                <label class="form-label">Referencing object</label>
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Schema</span>
                    <select class="form-select form-select-sm" @bind="referencingSchemaOperator" style="max-width: 5rem;">
                        <option value="=">=</option>
                        <option value="like">like</option>
                    </select>
                    <input type="text" class="form-control form-control-sm" autocomplete="off"
                           @bind="referencingSchemaFilter" @bind:event="oninput" />
                    <span class="input-group-text">Name</span>
                    <select class="form-select form-select-sm" @bind="referencingNameOperator" style="max-width: 5rem;">
                        <option value="=">=</option>
                        <option value="like">like</option>
                    </select>
                    <input type="text" class="form-control form-control-sm" autocomplete="off"
                           @bind="referencingNameFilter" @bind:event="oninput" />
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-sm-6">
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Type</span>
                    <select class="form-select form-select-sm" @bind="referencingTypeFilter">
                        <option value="">ALL</option>
                        @foreach (var type in queryResults.Select(r => r.ReferencingType).Distinct().OrderBy(s => s))
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col">
                <label class="form-label">Referenced object</label>
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Schema</span>
                    <select class="form-select form-select-sm" @bind="referencedSchemaOperator" style="max-width: 5rem;">
                        <option value="=">=</option>
                        <option value="like">like</option>
                    </select>
                    <input type="text" class="form-control form-control-sm" autocomplete="off"
                           @bind="referencedSchemaFilter" @bind:event="oninput" />
                    <span class="input-group-text">Name</span>
                    <select class="form-select form-select-sm" @bind="referencedNameOperator" style="max-width: 5rem;">
                        <option value="=">=</option>
                        <option value="like">like</option>
                    </select>
                    <input type="text" class="form-control form-control-sm" autocomplete="off"
                           @bind="referencedNameFilter" @bind:event="oninput" />
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-sm-6">
                <div class="input-group input-group-sm">
                    <span class="input-group-text">Type</span>
                    <select class="form-select form-select-sm" @bind="referencedTypeFilter">
                        <option value="">ALL</option>
                        @foreach (var type in queryResults.Select(r => r.ReferencedType).Distinct().OrderBy(s => s))
                        {
                            <option value="@type">@type</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-text">Hover over an object's name to view its type. Click on an object to navigate between references.</div>
        </div>
        <div class="row mt-2">
            <div class="col">
                <table class="table table-striped table-sm">
                    <thead>
                        <tr>
                            <th>
                                Referencing object
                            </th>
                            <th>
                                Referenced object
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var reference in FilteredQueryResults)
                        {
                            var referencing = $"[{reference.ReferencingSchema}].[{reference.ReferencingName}]";
                            var referencedDb = reference.ReferencedDatabase is null ? null : $"[{reference.ReferencedDatabase}].";
                            var referenced = $"{referencedDb}[{reference.ReferencedSchema}].[{reference.ReferencedName}]";
                            <tr>
                                <td>
                                    <a class="text-body"
                                       href="javascript:void(0)"
                                       title="@reference.ReferencingType"
                                       @onclick="async () => await NavigateReferencingObjectAsync(reference)">
                                        @referencing
                                    </a>
                                </td>
                                <td>
                                    <a class="text-body"
                                       href="javascript:void(0)"
                                       title="@reference.ReferencedType"
                                       @onclick="async () => await NavigateReferencedObjectAsync(reference)">
                                        @referenced
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </BodyTemplate>

    <FooterTemplate>
        <HxButton Color="ThemeColor.Secondary" Spinner="false" @onclick="async () => await offcanvas.LetAsync(x => x.HideAsync())">Close</HxButton>
    </FooterTemplate>
</HxOffcanvas>