@inherits StepEditModal<PackageStep>

<StepEditModalTemplate Modal="this" TStep="PackageStep">
    @if (Step is not null)
    {
        <div class="row gap-3">
            <div class="col-auto">
                <label class="form-label">Timeout (min) (0 = indefinite)</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.XOctagon" />
                    </div>
                    <InputNumber class="form-control form-control-sm" @bind-Value="Step.TimeoutMinutes" style="max-width: 10rem;"></InputNumber>
                </div>
            </div>
            <div class="col-auto">
                <label class="form-label">Connection</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.Database" />
                    </div>
                    <InputSelect class="form-select form-select-sm" @bind-Value="Step.ConnectionId">
                        @foreach (var connection in Connections ?? Enumerable.Empty<SqlConnectionInfo>())
                        {
                            <option value="@connection.ConnectionId">@connection.ConnectionName</option>
                        }
                    </InputSelect>
                </div>
            </div>
        </div>
        <div class="row mt-2 gap-2">
            <div class="col">
                <label class="form-label">Folder name</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.Folder" />
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.PackageFolderName" @onchange="ResetStepError"></InputText>
                </div>
            </div>
            <div class="col-md">
                <label class="form-label">Project name</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.Briefcase" />
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.PackageProjectName" @oninput="ResetStepError"></InputText>
                </div>
            </div>
        </div>
        <div class="row mt-2 align-items-end gap-2">
            <div class="col">
                <label class="form-label">Package name</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.Package" />
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.PackageName" @oninput="ResetStepError"></InputText>
                </div>
            </div>
            <div class="col-md-auto">
                <HxButtonGroup Size="ButtonGroupSize.Small">
                    <HxButton Size="ButtonSize.Small" Color="ThemeColor.None" CssClass="btn-auto" @onclick="OpenPackageSelectOffcanvas">
                        <CxIcon Icon="FeatherIcon.MoreHorizontal" />
                        Browse catalog
                    </HxButton>
                    <HxButton Size="ButtonSize.Small" Color="ThemeColor.None" CssClass="btn-auto" @onclick="ImportParametersAsync">
                        <CxIcon Icon="FeatherIcon.AtSign" />
                        Import parameters
                    </HxButton>
                </HxButtonGroup>
            </div>
        </div>
        <PackageSelectOffcanvas @ref="PackageSelectOffcanvas" ConnectionId="Step.ConnectionId" OnPackageSelected="OnPackageSelected" />
        <div class="row mt-3 gap-3">
            <div class="col-auto">
                <div class="form-check form-check-inline">
                    <input type="checkbox" class="form-check-input" id="new_step_32bit_mode"
                           checked=@Step.ExecuteIn32BitMode
                           @bind-value="Step.ExecuteIn32BitMode">
                    <label class="form-check-label" for="new_step_32bit_mode">Execute in 32 bit mode</label>
                </div>
            </div>
            <div class="col">
                <label class="form-label">Execute as login (blank = no impersonation)</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.User" />
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.ExecuteAsLogin" @oninput="ResetStepError" style="max-width: 30rem;"></InputText>
                </div>
            </div>
        </div>
        <PackageParameterEditComponent Step="Step" />
    }
</StepEditModalTemplate>