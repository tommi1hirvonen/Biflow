@inherits StepEditModal<JobStep>

<StepEditModalTemplate Modal="this" TStep="JobStep">
    @if (Step is not null)
    {
        <div class="row align-items-end gap-3">
            <div class="col-auto">
                <label class="form-label">Job to execute</label>
                <div class="input-group">
                    <div class="input-group-text">
                        <CxIcon Icon="LucideIcon.ClipboardList" />
                    </div>
                    <InputSelect class="form-select" @bind-Value="Step.JobToExecuteId" @bind-Value:after="SetJobToExecute">
                    <option value=""></option>
                    @foreach (var category in JobCategories)
                    {
                        <optgroup label="@(category?.CategoryName ?? "No category")">
                            @foreach (var job in Jobs.Where(j => j.CategoryId == category?.CategoryId).OrderBy(j => j.JobName))
                            {
                                <option value="@job.JobId">
                                    @job.JobName
                                </option>
                            }
                        </optgroup>
                    }
                </InputSelect>
                </div>
            </div>
            <div class="col-auto">
                <div class="form-check form-check-inline">
                    <input type="checkbox" class="form-check-input" id="new_step_job_synchronized"
                       checked=@Step.JobExecuteSynchronized
                       @bind-value="Step.JobExecuteSynchronized">
                    <label class="form-check-label" for="new_step_job_synchronized">
                        Synchronized
                        &nbsp;
                        <HxPopover Trigger="PopoverTrigger.Hover" Content="By default child job executions are launched asynchronously (fire and forget). If synchronized execution is enabled, the step completes only after the child job's execution is completed.">
                            <CxIcon Icon="FeatherIcon.Info" />
                        </HxPopover>
                    </label>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <label class="form-label">Tag filters</label>
            <HxInputTags @bind-Value="TagFilters"
                     DataProvider="GetTagFilterSuggestions"
                     AllowCustomTags="false"
                     SuggestMinimumLength="0"
                     SuggestDelay="0"
                     TagBadgeSettings="new BadgeSettings() { Color = ThemeColor.Secondary }" />
            <div class="form-text">Use tag filters to only include steps with specific tags in job executions.</div>
        </div>
        <JobStepParameterEditComponent Step="Step" TargetJobId="Step.JobToExecuteId" />
    }
</StepEditModalTemplate>