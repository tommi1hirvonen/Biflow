@inherits ParameterizedStepEditModal<FunctionStep>

<StepEditModalTemplate Modal="this" TStep="FunctionStep">
    @if (Step is not null)
    {
        <div class="row">
            <div class="col-lg">
                <label class="form-label">Timeout (min) (0 = indefinite)</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        @MarkupHelper.FromFile("icons/feather/x-octagon.svg")
                    </div>
                    <InputNumber class="form-control form-control-sm" @bind-Value="Step.TimeoutMinutes"></InputNumber>
                </div>
            </div>
            <div class="col-lg">
                <label class="form-label">Function App</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        @MarkupHelper.FromFile("icons/feather/zap.svg")
                    </div>
                    <InputSelect class="form-select form-select-sm" @bind-Value="Step.FunctionAppId">
                        @foreach (var app in FunctionApps ?? Enumerable.Empty<FunctionApp>())
                        {
                            <option value="@app.FunctionAppId">@app.FunctionAppName</option>
                        }
                    </InputSelect>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-lg">
                <label class="form-label">Function url</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        @MarkupHelper.FromFile("icons/feather/code.svg")
                    </div>
                    <InputText class="form-control form-control-sm" style="font-family: monospace;" @bind-Value="Step.FunctionUrl" @oninput="ResetStepError"></InputText>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col">
                <HxButton Size="ButtonSize.Small" Color="ThemeColor.Light" @onclick="OpenFunctionSelectOffcanvas">
                    @MarkupHelper.FromFile("icons/feather/more-horizontal.svg")
                    Browse functions
                </HxButton>
            </div>
        </div>
        <FunctionSelectOffcanvas @ref="FunctionSelectOffcanvas" FunctionAppId="Step.FunctionAppId" OnFunctionSelected="OnFunctionSelected" />
        <div class="row mt-3">
            <div class="col">
                <div class="form-check form-check-inline">
                    <input type="checkbox" class="form-check-input" id="function_is_durable"
                           checked=@Step.FunctionIsDurable
                           @bind-value="Step.FunctionIsDurable">
                    <label class="form-check-label" for="function_is_durable">Is durable</label>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-lg">
                <label class="form-label">Function key</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        @MarkupHelper.FromFile("icons/feather/key.svg")
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.FunctionKey" @oninput="ResetStepError"></InputText>
                </div>
                @{ var functionAppKey = FunctionApps?.FirstOrDefault(app => app.FunctionAppId == Step.FunctionAppId)?.FunctionAppKey; }
                @if (functionAppKey is null)
                {
                    <div class="form-text">No key was configured for the Function App in settings. A function key must be set.</div>
                }
                else
                {
                    <div class="form-text">Set a function key to override the Function App key configured in settings.</div>
                }
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-lg">
                <label class="form-label">Function input</label>
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        @MarkupHelper.FromFile("icons/feather/chevron-right.svg")
                    </div>
                    <InputTextArea class="form-control form-control-sm" @bind-Value="Step.FunctionInput" style="font-family: monospace;" rows="3" @oninput="ResetStepError"></InputTextArea>
                </div>
            </div>
        </div>
        <StepParameterEditComponent Step="Step" JobParameters="Job?.JobParameters" />
    }
</StepEditModalTemplate>