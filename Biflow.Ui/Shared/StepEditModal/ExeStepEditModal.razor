@inherits StepEditModal<ExeStep>

<StepEditModalTemplate Modal="this" TStep="ExeStep">
    @if (Step is not null)
    {
        <div class="row">
            <div class="col-md-4 d-md-flex justify-content-end">
                <label class="form-label mb-lg-0">Timeout (min)</label>
            </div>
            <div class="col-md-6">
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.XOctagon" />
                    </div>
                    <InputNumber class="form-control form-control-sm" @bind-Value="Step.TimeoutMinutes" style="max-width: 5rem;"></InputNumber>
                </div>
                <span class="form-text">0 = indefinite</span>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-4 d-md-flex justify-content-end">
                <label class="form-label mb-lg-0">File path</label>
            </div>
            <div class="col-md-6">
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.File" />
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.ExeFileName"></InputText>
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-4 d-md-flex justify-content-end">
                <label class="form-label mb-lg-0">Arguments</label>
            </div>
            <div class="col-md-6">
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.Command" />
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.ExeArguments"></InputText>
                </div>
                <div class="form-text">
                    Arguments can be set dynamically during step execution using step parameters.
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-4 d-md-flex justify-content-end">
                <label class="form-label mb-lg-0">Working directory</label>
            </div>
            <div class="col-md-6">
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.Folder" />
                    </div>
                    <InputText class="form-control form-control-sm" @bind-Value="Step.ExeWorkingDirectory"></InputText>
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-4 d-md-flex justify-content-end">
                <label class="form-label mb-lg-0">Success exit code</label>
            </div>
            <div class="col-md-6">
                <div class="input-group input-group-sm">
                    <div class="input-group-text">
                        <CxIcon Icon="FeatherIcon.CheckCircle" />
                    </div>
                    <InputNumber class="form-control form-control-sm" @bind-Value="Step.ExeSuccessExitCode" style="max-width: 8rem;"></InputNumber>
                </div>
                <div class="form-text">Blank if not applicable</div>
            </div>
        </div>

        <StepParametersEditor Step="Step" NewParameterDelegate="() => new() { Step = Step }" />
    }
</StepEditModalTemplate>