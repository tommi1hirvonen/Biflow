<BSModal @ref="Modal" Size="Size.Large">
    @if (Step is not null)
    {
        <BSModalHeader OnClick="() => Modal.Hide()">@Step.StepName</BSModalHeader>
        <BSModalBody>
            <dl class="row">
                <dt class="col-sm-3">
                    Step name
                </dt>
                <dd class="col-sm-9">
                    @Step.StepName
                </dd>
                <dt class="col-sm-3">
                    Description
                </dt>
                <dd class="col-sm-9">
                    @Step.StepDescription
                </dd>
                <dt class="col-sm-3">
                    Execution phase
                </dt>
                <dd class="col-sm-9">
                    @Step.ExecutionPhase
                </dd>
                <dt class="col-sm-3">
                    Step type
                </dt>
                <dd class="col-sm-9">
                    @Step.StepType
                </dd>
                <dt class="col-sm-3">
                    Retry attempts
                </dt>
                <dd class="col-sm-9">
                    @Step.RetryAttempts
                </dd>
                <dt class="col-sm-3">
                    Retry interval (min)
                </dt>
                <dd class="col-sm-9">
                    @Step.RetryIntervalMinutes
                </dd>
                <dt class="col-sm-3">
                    Timeout (min)
                </dt>
                <dd class="col-sm-9">
                    @Step.TimeoutMinutes
                </dd>
                @if (Step.StepType == StepType.Sql)
                {
                    <dt class="col-sm-3">
                        SQL statement
                    </dt>
                    <dd class="col-sm-9">
                        <pre><code>@Step.SqlStatement</code></pre>
                    </dd>
                }
                else if (Step.StepType == StepType.Pipeline)
                {
                    <dt class="col-sm-3">
                        Pipeline name
                    </dt>
                    <dd class="col-sm-9">
                        @Step.PipelineName
                    </dd>
                    <dt class="col-sm-3">
                        Data Factory name
                    </dt>
                    <dd class="col-sm-9">
                        @Step.DataFactory?.DataFactoryName
                    </dd>
                }
                else if (Step.StepType == StepType.Job)
                {
                    <dt class="col-sm-3">
                        Job to execute
                    </dt>
                    <dd class="col-sm-9">
                        @Step.JobToExecuteId
                    </dd>
                    <dt class="col-sm-3">
                        Synchronized
                    </dt>
                    <dd class="col-sm-9">
                        @Step.JobExecuteSynchronized
                    </dd>
                }
                else if (Step.StepType == StepType.Exe)
                {
                    <dt class="col-sm-3">
                        File path
                    </dt>
                    <dd class="col-sm-9">
                        @Step.ExeFileName
                    </dd>
                    <dt class="col-sm-3">
                        Arguments
                    </dt>
                    <dd class="col-sm-9">
                        @Step.ExeArguments
                    </dd>
                    <dt class="col-sm-3">
                        Working directory
                    </dt>
                    <dd class="col-sm-9">
                        @Step.ExeWorkingDirectory
                    </dd>
                    <dt class="col-sm-3">
                        Success exit code
                    </dt>
                    <dd class="col-sm-9">
                        @Step.ExeSuccessExitCode
                    </dd>
                }
                else if (Step.StepType == StepType.Dataset)
                {
                    <dt class="col-sm-3">
                        Group id
                    </dt>
                    <dd class="col-sm-9">
                        @Step.DatasetGroupId
                    </dd>
                    <dt class="col-sm-3">
                        Dataset id
                    </dt>
                    <dd class="col-sm-9">
                        @Step.DatasetId
                    </dd>
                    <dt class="col-sm-3">
                        Power BI Service name
                    </dt>
                    <dd class="col-sm-9">
                        @Step.PowerBIService?.PowerBIServiceName
                    </dd>
                }
                else if (Step.StepType == StepType.Package)
                {
                    <dt class="col-sm-3">
                        Package folder
                    </dt>
                    <dd class="col-sm-9">
                        @Step.PackageFolderName
                    </dd>
                    <dt class="col-sm-3">
                        Package project
                    </dt>
                    <dd class="col-sm-9">
                        @Step.PackageProjectName
                    </dd>
                    <dt class="col-sm-3">
                        Package name
                    </dt>
                    <dd class="col-sm-9">
                        @Step.PackageName
                    </dd>
                    <dt class="col-sm-3">
                        32 bit mode
                    </dt>
                    <dd class="col-sm-9">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" disabled checked="@(Step.ExecuteIn32BitMode ? "checked" : null)">
                            <label class="custom-control-label"></label>
                        </div>
                    </dd>
                    <dt class="col-sm-3">
                        Execute as login
                    </dt>
                    <dd class="col-sm-9">
                        @Step.ExecuteAsLogin
                    </dd>
                }
            </dl>
            @if (Step.StepType == StepType.Package)
            {
                <h6>Parameters</h6>
                @if (Step.PackageParameters is not null)
                {
                    <dl class="row">
                        @foreach (var param in Step.PackageParameters)
                        {
                            <dt class="col-sm-3">@($"${param.ParameterLevel}::{param.ParameterName}")</dt>
                            <dd class="col-sm-9">@($"{param.ParameterValue} ({param.ParameterType})")</dd>
                        }
                    </dl>
                }
            }
            else if (Step.StepType == StepType.Pipeline)
            {
                <h6>Parameters</h6>
                @if (Step.PipelineParameters is not null)
                {
                    <dl class="row">
                        @foreach (var param in Step.PipelineParameters)
                        {
                            <dt class="col-sm-3">@param.ParameterName</dt>
                            <dd class="col-sm-9">@param.ParameterValue</dd>
                        }
                    </dl>
                }
            }
        </BSModalBody>
    }
    <BSModalFooter>
        <BSButton Color="Color.Secondary" @onclick="() => Modal.Hide()">Close</BSButton>
    </BSModalFooter>
</BSModal>


@code {
    public BSModal Modal { get; set; } = null!;

    [Parameter]
    public Step? Step { get; set; }
}
