@if (StepExecutionAttempt is not null)
{
    <dl class="row">
        <dt class="col-sm-3">
            Execution id
        </dt>
        <dd class="col-sm-9">
            @StepExecutionAttempt.ExecutionId
        </dd>
        <dt class="col-sm-3">
            Step id
        </dt>
        <dd class="col-sm-9">
            @StepExecutionAttempt.StepId
        </dd>
        <dt class="col-sm-3">
            Executor PID
        </dt>
        <dd class="col-sm-9">
            @StepExecutionAttempt.StepExecution.Execution.ExecutorProcessId
        </dd>
        <dt class="col-sm-3">
            Job
        </dt>
        <dd class="col-sm-9">
            @StepExecutionAttempt.StepExecution.Execution.JobName
        </dd>
        <dt class="col-sm-3">
            Created by
        </dt>
        <dd class="col-sm-9">
            @StepExecutionAttempt.StepExecution.Execution.CreatedBy
        </dd>
        <dt class="col-sm-3">
            Created
        </dt>
        <dd class="col-sm-9">
            @StepExecutionAttempt.StepExecution.Execution.CreatedDateTime.LocalDateTime
        </dd>

        @if (ShowExtraDetails)
        {
            <dt class="col-sm-3">
                Started
            </dt>
            <dd class="col-sm-9">
                @StepExecutionAttempt.StartDateTime?.LocalDateTime
            </dd>
            <dt class="col-sm-3">
                Ended
            </dt>
            <dd class="col-sm-9">
                @StepExecutionAttempt.EndDateTime?.LocalDateTime
            </dd>
            <dt class="col-sm-3">
                <text>Duration</text>
            </dt>
            <dd class="col-sm-9">
                <text>@StepExecutionAttempt.GetDurationInReadableFormat()</text>
            </dd>
            <dt class="col-sm-3">
                Status
            </dt>
            <dd class="col-sm-9">
                <StepExecutionStatusBadgeComponent ExecutionStatus="@StepExecutionAttempt.ExecutionStatus" />
            </dd>
        }

        @if (StepExecutionAttempt.ExecutionStatus == StepExecutionStatus.Stopped)
        {
            <dt class="col-sm-3">
                Stopped by
            </dt>
            <dd class="col-sm-9">
                @StepExecutionAttempt.StoppedBy
            </dd>
        }

        @if (StepExecutionAttempt.StepExecution is SqlStepExecution sql)
        {
            <dt class="col-sm-3">
                SQL statement
            </dt>
            <dd class="col-sm-9">
                <pre><code>@sql.SqlStatement</code></pre>
            </dd>
            <dt class="col-sm-3">
                Info message
            </dt>
            <dd class="col-sm-9">
                @if (StepExecutionAttempt is SqlStepExecutionAttempt sql_)
                {
                    <pre><code>@sql_.InfoMessage</code></pre>
                }
            </dd>
        }
        else if (StepExecutionAttempt.StepExecution is PackageStepExecution package)
        {
            <dt class="col-sm-3">
                Package path
            </dt>
            <dd class="col-sm-9">
                @package.PackagePath
            </dd>
            <dt class="col-sm-3">
                32 bit mode
            </dt>
            <dd class="col-sm-9">
                @package.ExecuteIn32BitMode
            </dd>
            <dt class="col-sm-3">
                Execute as login
            </dt>
            <dd class="col-sm-9">
                @package.ExecuteAsLogin
            </dd>
            <dt class="col-sm-3">
                Operation id
            </dt>
            <dd class="col-sm-9">
                @if (StepExecutionAttempt is PackageStepExecutionAttempt package__)
                {
                    @package__.PackageOperationId
                }
            </dd>
        }
        else if (StepExecutionAttempt.StepExecution is PipelineStepExecution pipeline)
        {
            <dt class="col-sm-3">
                Pipeline name
            </dt>
            <dd class="col-sm-9">
                @pipeline.PipelineName
            </dd>
            <dt class="col-sm-3">
                Pipeline run id
            </dt>
            <dd class="col-sm-9">
                @if (StepExecutionAttempt is PipelineStepExecutionAttempt pipeline__)
                {
                    @pipeline__.PipelineRunId
                }
            </dd>
            <dt class="col-sm-3">
                Data Factory id
            </dt>
            <dd class="col-sm-9">
                @pipeline.DataFactoryId
            </dd>
        }
        else if (StepExecutionAttempt.StepExecution is ExeStepExecution exe)
        {
            <dt class="col-sm-3">
                File path
            </dt>
            <dd class="col-sm-9">
                @exe.ExeFileName
            </dd>
            <dt class="col-sm-3">
                Arguments
            </dt>
            <dd class="col-sm-9">
                @exe.ExeArguments
            </dd>
            <dt class="col-sm-3">
                Working directory
            </dt>
            <dd class="col-sm-9">
                @exe.ExeWorkingDirectory
            </dd>
            <dt class="col-sm-3">
                Success exit code
            </dt>
            <dd class="col-sm-9">
                @exe.ExeSuccessExitCode
            </dd>
            <dt class="col-sm-3">
                Output
            </dt>
            <dd class="col-sm-9">
                @if (StepExecutionAttempt is ExeStepExecutionAttempt exe_)
                {
                    <pre><code>@exe_.InfoMessage</code></pre>
                }
            </dd>
        }
        else if (StepExecutionAttempt.StepExecution is DatasetStepExecution dataset)
        {
            <dt class="col-sm-3">
                Group id
            </dt>
            <dd class="col-sm-9">
                @dataset.DatasetGroupId
            </dd>
            <dt class="col-sm-3">
                Dataset id
            </dt>
            <dd class="col-sm-9">
                @dataset.DatasetId
            </dd>
            <dt class="col-sm-3">
                Power BI Service id
            </dt>
            <dd class="col-sm-9">
                @dataset.AppRegistrationId
            </dd>
        }
        else if (StepExecutionAttempt.StepExecution is FunctionStepExecution function)
        {
            <dt class="col-sm-3">
                Function url
            </dt>
            <dd class="col-sm-9">
                @function.FunctionUrl
            </dd>
            <dt class="col-sm-3">
                Function input
            </dt>
            <dd class="col-sm-9">
                <pre><code>@function.FunctionInput</code></pre>
            </dd>
            <dt class="col-sm-3">
                Is durable
            </dt>
            <dd class="col-sm-9">
                @function.FunctionIsDurable
            </dd>
            <dt class="col-sm-3">
                Function App id
            </dt>
            <dd class="col-sm-9">
                @function.FunctionAppId
            </dd>
            @if (StepExecutionAttempt is FunctionStepExecutionAttempt function_)
            {
                <dt class="col-sm-3">
                    Instance id
                </dt>
                <dd class="col-sm-9">
                    @function_.FunctionInstanceId    
                </dd>
                <dt class="col-sm-3">
                    Output
                </dt>
                <dd class="col-sm-9">
                    <code style="white-space: pre-wrap;">@function_.InfoMessage</code>
                </dd>
            }
        }
        <dt class="col-sm-3">
            Error message
        </dt>
        <dd class="col-sm-9">
            <code class="text-danger" style="white-space: pre-wrap;">@StepExecutionAttempt.ErrorMessage</code>
        </dd>
    </dl>
    @if (StepExecutionAttempt.StepExecution is PackageStepExecution package_)
    {
        <h6>Parameters</h6>
        <dl class="row">
            @foreach (var param in package_.StepExecutionParameters ?? Enumerable.Empty<StepExecutionParameter>())
            {
                <dt class="col-sm-3">@($"${param.ParameterLevel}::{param.ParameterName}")</dt>
                <dd class="col-sm-9">@($"{param.ParameterValue} ({param.ParameterType})")</dd>
            }
        </dl>
    }
    else if (StepExecutionAttempt.StepExecution is PipelineStepExecution pipeline)
    {
        <h6>Parameters</h6>
        <dl class="row">
            @foreach (var param in pipeline.StepExecutionParameters ?? Enumerable.Empty<StepExecutionParameter>())
            {
                <dt class="col-sm-3">@param.ParameterName</dt>
                <dd class="col-sm-9">@($"{param.ParameterValue} ({param.ParameterType})")</dd>
            }
        </dl>
    }
}


@code {
    [Parameter]
    public StepExecutionAttempt? StepExecutionAttempt { get; set; }

    [Parameter]
    public bool ShowExtraDetails { get; set; } = false;
}
