@page
@model EtlManager.Pages.Jobs.Steps.IndexModel

@{
    ViewData["Title"] = "Job Steps";
}

<h4>@Model.Job.JobName</h4>
<hr />
<p></p>
<div>
    <form method="post">
        <div class="row">
            <div class="col">
                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal_create">
                    New step
                </button>
            </div>
            <div class="col float-right">
                <a asp-page="Dependency" asp-route-id="@Model.Job.JobId" asp-route-name="@Model.Job.JobName">Dependencies</a>
                <text>&nbsp;&nbsp;&nbsp;&nbsp;</text>
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Execute
                    </button>
                    <div class="dropdown-menu">
                        <button class="dropdown-item" type="button" onclick="startExecution()">Confirm</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<p />
<div id="alert_execution">
    
</div>
<div id="alert_execution_error" style="display: none;" class="alert alert-danger" role="alert">
    Alert message set in jQuery
</div>
<p></p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].StepName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].ExecutionPhase)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].StepType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].IsEnabled)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Steps)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StepName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExecutionPhase)
                </td>
                <td>
                    @if (item.StepType == "SQL")
                    {
                        @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(Model.WebRootPath, "icons/material/code-black-48dp.svg")))
                    }
                    else if (item.StepType == "SSIS")
                    {
                        @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(Model.WebRootPath, "icons/material/meditation-black-48dp.svg")))
                    }
                </td>
                <td>
                    <form>
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="@item.StepId" asp-for="@item.IsEnabled" onchange="toggleEnabled(this)" data-step-id="@item.StepId">
                            <label class="custom-control-label" for="@item.StepId"></label>
                        </div>
                    </form>
                </td>
                <td>
                    <form method="post">
                        <a class="btn btn-link btn-sm" asp-page="./Edit" asp-route-id="@item.StepId">Edit</a> |
                        @*Open corresponding modal popup to display step execution details*@
                        <button type="button" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#modal_@item.StepId">
                            Details
                        </button> |
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-danger btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Delete
                            </button>
                            <div class="dropdown-menu">
                                <button class="dropdown-item" asp-page-handler="Delete" asp-route-id="@item.StepId">Confirm</button>
                            </div>
                        </div>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-page="../Index">Back to jobs</a>
</div>

@section Scripts {

    <script type="text/javascript">

        function toggleEnabled(elem) {
            var id_ = $(elem).data('step-id');
            //alert(id);

            $.ajax({
                url: "./Steps/Index?handler=ToggleEnabled",
                method: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: {
                    id: id_
                },
                success: function (response) {
                    //alert(response);
                },
                failure: function (response) {
                    alert("Error enabling/disabling step");
                }
            });
        }

    </script>

    <script type="text/javascript">
        function startExecution() {
            var jobId = "@Model.Job.JobId";
            $.ajax({
                url: "./Steps/Index?handler=Execute",
                method: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: {
                    id: jobId
                },
                success: function (response) {
                    if (response.success) {
                        $('#alert_execution').empty();
                        $('#alert_execution').append(`
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                              Job started successfully - <a class="alert-link" href="/Executions/JobDetails?id=` + response.executionId + `" target="_blank">monitor execution</a>
                              <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            `);
                    } else {
                        $('#alert_execution').empty();
                        $('#alert_execution').append(`
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                              ` + response.responseText + `
                              <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            `);
                    }
                },
                error: function (response) {
                    $('#alert_execution').empty();
                    $('#alert_execution').append(`
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                              Error starting job: AJAX error
                              <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            `);
                }
            });
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () { stepTypeSelected(); });

        function stepTypeSelected() {
            var stepType = document.getElementById('step_type').value;
            if (stepType == "SQL") {
                $('#sql_statement_div').show();
                $('#folder_div').hide();
                $('#project_div').hide();
                $('#package_div').hide();
                $('#32_bit_mode_div').hide();
                $('#parameters_div').hide();
            } else if (stepType == "SSIS") {
                $('#sql_statement_div').hide();
                $('#folder_div').show();
                $('#project_div').show();
                $('#package_div').show();
                $('#32_bit_mode_div').show();
                $('#parameters_div').show();
            }
        }

    </script>

    <script type="text/javascript">
        $(function () {
            $("#button_submit").click(function () {
                var stepType = document.getElementById('step_type').value;
                var sql = document.getElementById('sql_input').value;
                var folder = document.getElementById('folder_input').value;
                var project = document.getElementById('project_input').value;
                var package = document.getElementById('package_input').value;
                if (stepType == "SQL" && sql.length == 0) {
                    $('#sql_error').show();
                    return false;
                } else if (stepType == "SSIS" && (folder.length == 0 || project.length == 0 || package.length == 0)) {
                    $('#ssis_error').show();
                    return false;
                }
                return true;
            });
        });

        $(function () {
            $('#step_type').change(function () { hideErrors(); });
            $('#sql_input').on('input', function () { hideErrors(); });
            $('#folder_input').on('input', function () { hideErrors(); });
            $('#project_input').on('input', function () { hideErrors(); });
            $('#package_input').on('input', function () { hideErrors(); });
        });

        function hideErrors() {
            $('#ssis_error').hide();
            $('#sql_error').hide();
        }
    </script>

    <script type="text/javascript">
        var parameterCount = @Model.Parameters.Count;

        function addParameter() {
            @*Remove the validator from the form...*@
            $('#form').removeData("validator");
            $('#form').removeData("unobtrusiveValidation");
            $('#parameters_table tr:last').after(`
                <tr>
                    <td>
                        <input id="input_isdeleted" type="hidden" value="false" data-val="true" data-val-required="The IsDeleted field is required." name="Parameters[` + parameterCount + `].IsDeleted">
                    </td>
                        <td>
                        <input id="input_parameter_name" class="form-control" type="text" data-val="true" data-val-maxlength="The field Name must be a string or array type with a maximum length of '128'." data-val-maxlength-max="128" data-val-required="The Name field is required." maxlength="128" name="Parameters[` + parameterCount + `].ParameterName">
                        <span class="text-danger field-validation-valid" data-valmsg-for="Parameters[` + parameterCount + `].ParameterName" data-valmsg-replace="true"></span>
                    </td>
                        <td>
                        <input id="input_parameter_value" class="form-control" type="text" data-val="true" data-val-required="The Value field is required." name="Parameters[` + parameterCount + `].ParameterValue">
                        <span class="text-danger field-validation-valid" data-valmsg-for="Parameters[` + parameterCount + `].ParameterValue" data-valmsg-replace="true"></span>
                    </td>
                    <td>
                        <button type="button" class="btn btn-outline-danger btn-sm" onclick="removeParameter(this)">Remove</button>
                    </td>
                </tr>
                `);
            parameterCount += 1;
            @*...and add it again to include the newly added fields in the validator.*@
            $.validator.unobtrusive.parse("form");
            return false;
        }

        function removeParameter(element) {
            $(element).closest('tr').find("#input_isdeleted").val(true);
            $(element).closest('tr').find("#input_parameter_name").val("_"); @*Set the input values to strings of length = 1 to prevent jQuery validation errors*@
            $(element).closest('tr').find("#input_parameter_value").val("_");
            $(element).closest('tr').hide();
        }
    </script>

    <script type="text/javascript">
        $('#button_submit').click(
            function () {
                var parameterNames = [];
                $("input[id=input_parameter_name]").each(function () {
                    parameterNames.push(this.value);
                });
                parameterNames = parameterNames.sort();
                for (var i = 0; i < parameterNames.length - 1; i++) {
                    if (parameterNames[i + 1] == parameterNames[i]) {
                        $('#duplicate_parameter_error').show();
                        return false;
                    }
                }
                return true;
            });

        $(function () {
            $("#parameters_div").on('input', function () {
                $('#duplicate_parameter_error').hide();
            });
        });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}


@*NEW STEP MODAL*@
<div class="modal fade" id="modal_create" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form method="post" asp-page-handler="Create">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Create</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-8 mx-auto">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="NewStep.JobId" />
                            <input type="hidden" asp-for="NewStep.IsEnabled" value="true" />
                            <div class="form-group">
                                <label asp-for="NewStep.StepName" class="control-label"></label>
                                <input asp-for="NewStep.StepName" class="form-control" />
                                <span asp-validation-for="NewStep.StepName" class="text-danger"></span>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-5">
                                    <label asp-for="NewStep.ExecutionPhase" class="control-label"></label>
                                    <input asp-for="NewStep.ExecutionPhase" class="form-control" />
                                    <span asp-validation-for="NewStep.ExecutionPhase" class="text-danger"></span>
                                </div>
                                <div class="form-group col-md-5">
                                    <label asp-for="NewStep.StepType" class="control-label"></label>
                                    <select asp-for="NewStep.StepType" class="form-control" id="step_type" onchange="stepTypeSelected()">
                                        <option>SQL</option>
                                        <option>SSIS</option>
                                    </select>
                                    <span asp-validation-for="NewStep.StepType" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="form-group" id="sql_statement_div">
                                <label asp-for="NewStep.SqlStatement" class="control-label"></label>
                                <textarea asp-for="NewStep.SqlStatement" id="sql_input" class="form-control" rows="3"></textarea>
                                <span asp-validation-for="NewStep.SqlStatement" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="folder_div">
                                <label asp-for="NewStep.FolderName" class="control-label"></label>
                                <input asp-for="NewStep.FolderName" id="folder_input" class="form-control" />
                                <span asp-validation-for="NewStep.FolderName" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="project_div">
                                <label asp-for="NewStep.ProjectName" class="control-label"></label>
                                <input asp-for="NewStep.ProjectName" id="project_input" class="form-control" />
                                <span asp-validation-for="NewStep.ProjectName" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="package_div">
                                <label asp-for="NewStep.PackageName" class="control-label"></label>
                                <input asp-for="NewStep.PackageName" id="package_input" class="form-control" />
                                <span asp-validation-for="NewStep.PackageName" class="text-danger"></span>
                            </div>
                            <div class="form-group form-check" id="32_bit_mode_div">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="NewStep.ExecuteIn32BitMode" /> @Html.DisplayNameFor(model => model.NewStep.ExecuteIn32BitMode)
                                </label>
                            </div>

                            <text id="sql_error" class="text-danger" style="display: none;">SQL statement cannot be empty</text>
                            <text id="ssis_error" class="text-danger" style="display: none;">Folder, project and package names cannot be empty</text>

                            <p />
                            <div id="parameters_div">
                                <p />
                                <h5>Parameters</h5>
                                <p />
                                <table id="parameters_table" class="table">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Name</th>
                                            <th>Value</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>@*Dummy row needed for the JS remove logic to work when there are no actual rows left*@</tr>
                                    </tbody>
                                </table>
                                <div id="duplicate_parameter_error" style="display: none;">
                                    <text class="text-danger">Duplicate parameter names</text>
                                    <p />
                                </div>
                                <button type="button" class="btn btn-outline-primary btn-sm" onclick="addParameter()">Add</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input id="button_submit" type="submit" class="btn btn-success" value="Create" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*Generate modal popup windows to display step details*@
@foreach (var item in Model.Steps)
{
    <div class="modal fade" id="modal_@item.StepId" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@item.StepName</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <dl class="row">
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.JobId)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.JobId)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.StepId)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.StepId)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.StepName)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.StepName)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.CreatedDateTime)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.CreatedDateTime)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.LastModifiedDateTime)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.LastModifiedDateTime)
                        </dd>

                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.ExecutionPhase)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.ExecutionPhase)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.StepType)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.StepType)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.SqlStatement)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.SqlStatement)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.FolderName)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.FolderName)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.ProjectName)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.ProjectName)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.PackageName)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.PackageName)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.ExecuteIn32BitMode)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.ExecuteIn32BitMode)
                        </dd>
                        <dt class="col-sm-2">
                            @Html.DisplayNameFor(model => item.IsEnabled)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => item.IsEnabled)
                        </dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}
