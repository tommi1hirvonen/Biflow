@page
@model EtlManager.Pages.Jobs.Steps.IndexModel

@{
    ViewData["Title"] = "Job Steps";
}

<h2>@Model.Job.JobName</h2>

<p></p>
<div>
    <form method="post">
        <div class="row">
            <div class="col">
                <a class="btn btn-success" asp-page="Create" asp-route-id="@Model.Job.JobId">New step</a>
            </div>
            <div class="col float-right">
                <a asp-page="Dependency" asp-route-id="@Model.Job.JobId" asp-route-name="@Model.Job.JobName">Dependencies</a>
                <text>&nbsp;&nbsp;&nbsp;&nbsp;</text>
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Execute
                    </button>
                    <div class="dropdown-menu">
                        <button class="dropdown-item" asp-page-handler="Execute" asp-route-id="@Model.Job.JobId" asp-route-redirect="true">Confirm</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<p></p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].StepName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].ExecutionPhase)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].StepType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Steps[0].IsEnabled)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Steps)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StepName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExecutionPhase)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StepType)
                </td>
                <td>
                    <form>
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="@item.StepId" asp-for="@item.IsEnabled" onchange="toggleEnabled(this)" data-step-id="@item.StepId">
                            <label class="custom-control-label" for="@item.StepId"></label>
                        </div>
                    </form>
                </td>
                <td>
                    <form method="post">
                        <a class="btn btn-link btn-sm" asp-page="./Edit" asp-route-id="@item.StepId">Edit</a> |
                        <a class="btn btn-link btn-sm" asp-page="./Details" asp-route-id="@item.StepId">Details</a> |
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-danger btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Delete
                            </button>
                            <div class="dropdown-menu">
                                <button class="dropdown-item" asp-page-handler="Delete" asp-route-id="@item.StepId">Confirm</button>
                            </div>
                        </div>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-page="../Index">Back to jobs</a>
</div>

@section Scripts {

    <script type="text/javascript">

        function toggleEnabled(elem) {
            var id_ = $(elem).data('step-id');
            //alert(id);

            $.ajax({
                url: "./Steps/Index?handler=ToggleEnabled",
                method: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: {
                    id: id_
                },
                success: function (response) {
                    //alert(response);
                },
                failure: function (response) {
                    alert("AJAX error");
                }
            });
        }

    </script>

}
