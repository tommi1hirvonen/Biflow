@page
@model EtlManager.Pages.Jobs.IndexModel

@{
    ViewData["Title"] = "Jobs";
}

<p />
<button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal_create">
    New job
</button>
<p />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].JobName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].CreatedDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].LastModifiedDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Jobs[0].UseDependencyMode)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Jobs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.JobName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastModifiedDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UseDependencyMode)
                </td>
                <td>
                    <form method="post">
                        <a class="btn btn-link btn-sm" asp-page="./Steps/Index" asp-route-id="@item.JobId">Steps</a> |
                        <a class="btn btn-link btn-sm" asp-page="./Schedules" asp-route-id="@item.JobId">Schedules</a> |
                        <button type="button" class="btn btn-outline-primary btn-sm" data-toggle="modal" data-target="#modal_edit_@item.JobId">
                            Edit
                        </button> |
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-primary btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Copy
                            </button>
                            <div class="dropdown-menu">
                                <button class="dropdown-item" asp-page-handler="Copy" asp-route-id="@item.JobId">Confirm</button>
                            </div>
                        </div> |
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-danger btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Delete
                            </button>
                            <div class="dropdown-menu">
                                <button class="dropdown-item" asp-page-handler="Delete" asp-route-id="@item.JobId">Confirm</button>
                            </div>
                        </div>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@*NEW JOB MODAL*@
<div class="modal fade" id="modal_create" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Create</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-8 mx-auto">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="NewJob.JobName" class="control-label"></label>
                                <input asp-for="NewJob.JobName" class="form-control" />
                                <span asp-validation-for="NewJob.JobName" class="text-danger"></span>
                            </div>
                            <div class="form-group form-check">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="NewJob.UseDependencyMode" /> @Html.DisplayNameFor(model => model.NewJob.UseDependencyMode)
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success" asp-page-handler="Create">Create</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*GENERATE EDIT MODALS*@
@foreach (var item in Model.Jobs)
{
    <div class="modal fade" id="modal_edit_@item.JobId" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Edit</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-8 mx-auto">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="EditJob.JobId" value="@item.JobId" />
                                <div class="form-group">
                                    <label asp-for="EditJob.JobName" class="control-label"></label>
                                    <input asp-for="EditJob.JobName" class="form-control" value="@item.JobName" />
                                    <span asp-validation-for="EditJob.JobName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="EditJob.CreatedDateTime" class="control-label"></label>
                                    <input asp-for="EditJob.CreatedDateTime" class="form-control" readonly value="@item.CreatedDateTime.ToString("yyyy-MM-ddTHH:mm").Replace(".", ":")" />
                                    <span asp-validation-for="EditJob.CreatedDateTime" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="EditJob.LastModifiedDateTime" class="control-label"></label>
                                    <input asp-for="EditJob.LastModifiedDateTime" class="form-control" readonly value="@item.LastModifiedDateTime.ToString("yyyy-MM-ddTHH:mm").Replace(".", ":")" />
                                    <span asp-validation-for="EditJob.LastModifiedDateTime" class="text-danger"></span>
                                </div>
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" checked="@(item.UseDependencyMode ? "checked" : null)" asp-for="EditJob.UseDependencyMode" /> @Html.DisplayNameFor(model => model.EditJob.UseDependencyMode)
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-success" asp-page-handler="Edit">Save</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
