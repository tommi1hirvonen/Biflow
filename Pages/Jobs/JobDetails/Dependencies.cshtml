@page
@model EtlManager.Pages.Jobs.JobDetails.DependenciesModel
@{
    ViewData["Title"] = "Job Dependencies";
}

<nav class="nav nav-pills">
    @foreach (var job in Model.Jobs)
    {
        <a class="nav-link @(job.JobId == Model.Job.JobId ? "active" : null)" asp-page="./Dependencies" asp-route-id="@job.JobId">@job.JobName</a>
    }
</nav>
<p></p>

<ul class="nav nav-tabs mt-3" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link" asp-page="./Index" asp-route-id="@Model.Job.JobId">Steps</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link active" asp-page="./Dependencies" asp-route-id="@Model.Job.JobId">Dependencies</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" asp-page="./Schedules" asp-route-id="@Model.Job.JobId">Schedules</a>
    </li>
</ul>
<p></p>
<table class="table table-sm">
    <thead>
        <tr>
            <th>
                Step
            </th>
            <th>
                Dependant on
            </th>
            <th>
                Strict dependency*
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Dependencies)
        {
            <tr>
                <td>
                    <a class="text-dark" asp-page="./StepDetails/Edit" asp-route-id="@item.StepId">@item.Step.StepName</a>
                </td>
                <td>
                    <a class="text-dark" asp-page="./StepDetails/Edit" asp-route-id="@item.DependantOnStep.StepId">@item.DependantOnStep.StepName</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StrictDependency)
                </td>
            </tr>
        }
    </tbody>
</table>
<hr/>
<p class="text-secondary"><small>*Strict dependency means that the step will be skipped if any one of the strict dependencies has failed or has been skipped.</small></p>

<div>
    <a asp-page="../Index">Back to jobs</a>
</div>