@page
@model EtlManager.Pages.Executions.JobDetailsGraphModel

@{
    ViewData["Title"] = "Details";
}

<p></p>
<svg width="@Model.ChartWidth" height="@Model.ChartHeight">
    <g transform="translate(@Model.ChartPaddingLeft,@Model.ChartPaddingTop)">
        @foreach (var execution in Model.Executions)
        {
            <g class="tick" transform="translate(0,@(Model.ChartElements[execution.StepExecutionId].LabelYLocation))" style="opacity: 1;">
                <text dy=".32em" x="-9" y="0" style="text-anchor: end; font-size: 13px">@execution.StepName</text>
            </g>
        } 
        @foreach (var execution in Model.Executions)
        {
            <rect style="fill: @GetFillFromStatus(execution.ExecutionStatus);"
                  y="@(Model.ChartElements[execution.StepExecutionId].BarYLocation)"
                  height="@(Model.BarHeight.ToString().Replace(',', '.'))"
                  x="@(Model.ChartElements[execution.StepExecutionId].BarXLocation)"
                  width="@(Model.ChartElements[execution.StepExecutionId].BarWidth)"></rect>
        }
    </g>
</svg>

@functions {
    public string GetFillFromStatus(string status)
    {
        switch (status)
        {
            case "COMPLETED":
                return "#28a745";
            case "FAILED":
                return "#dc3545";
            case "RUNNING":
            default:
                return "#007bff";
        }
    }
}