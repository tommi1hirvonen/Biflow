@page
@model EtlManager.Pages.Executions.JobsModel
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment WebHostEnvironment
@{
    ViewData["Title"] = "Executions";
}

<h3>Executions</h3>
<hr />
<div class="btn-group btn-group-sm">
    <a class="btn btn-light active">Jobs</a>
    <a class="btn btn-light" asp-page="./Steps" asp-route-IntervalHours="@Model.IntervalHours"
       asp-route-Status="@Model.Status" asp-route-JobName="@Model.JobName" asp-route-dateTimeUntilTicks="@Model.DateTimeUntil.Ticks">Steps</a>
</div>
<p />
<form>
    <div class="form-row">
        <div class="form-group col-2">
            <label>Status</label>
            <select asp-for="Status" asp-items="Model.Statuses" class="form-control">
                <option value="">ALL</option>
            </select>
        </div>
        <div class="form-group col-5">
            <label>Job</label>
            <select asp-for="JobName" asp-items="Model.JobNames" class="form-control">
                <option value="">All</option>
            </select>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-3">
            <label>Date & time until</label>
            <input asp-for="DateTimeUntil" class="form-control" type="datetime-local">
        </div>
        <div class="form-group col-2">
            <label>Interval (h)</label>
            <input asp-for="IntervalHours" class="form-control">
        </div>
    </div>
    <div class="form-row">
        <button type="submit" class="btn btn-primary">
            @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/refresh-cw.svg")))
            Refresh
        </button>
    </div>
</form>

<p />

<table class="table table-sm table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Executions[0].JobName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Executions[0].CreatedDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Executions[0].StartDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Executions[0].EndDateTime)
            </th>
            <th>
                Duration
            </th>
            <th>
                Number of steps
            </th>
            <th>
                Success percent
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Executions[0].ExecutionStatus)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Executions)
        {
            <tr style="cursor: pointer;" onclick="window.open('@("/Executions/JobDetails?id=" + item.ExecutionId)')">
                <td>
                    @Html.DisplayFor(modelItem => item.JobName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDateTime)
                </td>
                <td>
                    <text>@item.GetDurationInReadableFormat()</text>
                </td>
                <td style="text-align: right;">
                    @Html.DisplayFor(modelItem => item.NumberOfSteps)
                </td>
                <td style="text-align: right;">
                    @Html.DisplayFor(modelItem => item.SuccessPercent)
                </td>
                <td>
                    <partial name="_JobExecutionStatusBadgePartial" model="item" />
                </td>
            </tr>
        }
    </tbody>
</table>
