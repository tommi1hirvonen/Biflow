@page
@model EtlManager.Pages.Jobs.JobDetails.SchedulesModel
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment WebHostEnvironment
@{
    ViewData["Title"] = Model.Job.JobName;
}

<h3>Jobs</h3>
<hr />
<partial name="_JobDetailsNavigationPartial"
         model="@(new EtlManager.Pages.Shared._JobDetailsNavigationPartialModel { Job = Model.Job, Jobs = Model.Jobs, RedirectPage = "Schedules" })" />
<p></p>
<div class="container-fluid">
    <div class="row align-items-center">
        <div class="col-4">
            @if (Model.IsOperator)
            {
                <button type="button" class="btn btn-light" data-toggle="modal" data-target="#modal_create">
                    Add schedule
                </button>
            }

        </div>
        <div class="col-4">
            <div class="btn-group">
                <button type="button" id="button_toggle_subscribed" class="btn @(Model.Subscribed ? "btn-outline-success" : "btn-outline-secondary")" onclick="toggleSubscribed()">
                    @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(Model.WebRootPath, "icons/feather/mail.svg")))
                    <span id="span_toggle_subscribed">@(Model.Subscribed ? "Unsubscribe" : "Subscribe")</span>
                </button>
            </div>
        </div>
    </div>
</div>

<p></p>
<table class="table">
    <thead>
        <tr>
            <th>
                Enabled
            </th>
            <th>
                Time
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Schedules)
        {
            <tr>
                <td class="align-middle">
                    <form>
                        <div class="custom-control custom-switch">
                            @if (Model.IsOperator)
                            {
                                <input type="checkbox" class="custom-control-input" id="@item.ScheduleId" asp-for="@item.IsEnabled" onchange="toggleEnabled(this)" data-schedule-id="@item.ScheduleId">
                            }
                            else
                            {
                                <input type="checkbox" class="custom-control-input" disabled asp-for="@item.IsEnabled">
                            }

                            <label class="custom-control-label" style="cursor: pointer;" for="@item.ScheduleId"></label>
                        </div>
                    </form>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeHours):@item.GetMinutesText()
                </td>
                <td>
                    @if (item.Monday)
                    {
                        <span class="badge badge-primary">Monday</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Monday</span>
                    }
                </td>
                <td>
                    @if (item.Tuesday)
                    {
                        <span class="badge badge-primary">Tuesday</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Tuesday</span>
                    }
                </td>
                <td>
                    @if (item.Wednesday)
                    {
                        <span class="badge badge-primary">Wednesday</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Wednesday</span>
                    }
                </td>
                <td>
                    @if (item.Thursday)
                    {
                        <span class="badge badge-primary">Thursday</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Thursday</span>
                    }
                </td>
                <td>
                    @if (item.Friday)
                    {
                        <span class="badge badge-primary">Friday</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Friday</span>
                    }
                </td>
                <td>
                    @if (item.Saturday)
                    {
                        <span class="badge badge-primary">Saturday</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Saturday</span>
                    }
                </td>
                <td>
                    @if (item.Sunday)
                    {
                        <span class="badge badge-primary">Sunday</span>
                    }
                    else
                    {
                        <span class="badge badge-secondary">Sunday</span>
                    }
                </td>
                <td align="center">
                    @if (Model.IsOperator)
                    {
                        <form method="post">
                            <div class="btn-group">
                                <button type="button" class="btn btn-light btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/delete.svg")))
                                </button>
                                <div class="dropdown-menu">
                                    <button class="dropdown-item" asp-page-handler="Delete" asp-route-id="@item.ScheduleId" asp-route-jobId="@item.JobId">Delete</button>
                                </div>
                            </div>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.IsOperator)
{
    <div class="modal fade" id="modal_create" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="post">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">New schedule</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-8 mx-auto">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="NewSchedule.JobId" />
                                <input hidden asp-for="NewSchedule.IsEnabled" />
                                <div class="form-group col-md-4">
                                    <label asp-for="NewSchedule.TimeHours" class="control-label"></label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                                @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/clock.svg")))
                                            </div>
                                        </div>
                                        <input asp-for="NewSchedule.TimeHours" class="form-control" />
                                    </div>
                                    <span asp-validation-for="NewSchedule.TimeHours" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" asp-for="NewSchedule.TimeMinutes" value="0">
                                        <label class="form-check-label">:00</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" asp-for="NewSchedule.TimeMinutes" value="15">
                                        <label class="form-check-label">:15</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" asp-for="NewSchedule.TimeMinutes" value="30">
                                        <label class="form-check-label">:30</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" asp-for="NewSchedule.TimeMinutes" value="45">
                                        <label class="form-check-label">:45</label>
                                    </div>
                                </div>

                                <div id="weekdays" class="form-group">
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label">
                                            <input class="form-check-input" asp-for="NewSchedule.Monday" /> @Html.DisplayNameFor(model => model.NewSchedule.Monday)
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label">
                                            <input class="form-check-input" asp-for="NewSchedule.Tuesday" /> @Html.DisplayNameFor(model => model.NewSchedule.Tuesday)
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label">
                                            <input class="form-check-input" asp-for="NewSchedule.Wednesday" /> @Html.DisplayNameFor(model => model.NewSchedule.Wednesday)
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label">
                                            <input class="form-check-input" asp-for="NewSchedule.Thursday" /> @Html.DisplayNameFor(model => model.NewSchedule.Thursday)
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label">
                                            <input class="form-check-input" asp-for="NewSchedule.Friday" /> @Html.DisplayNameFor(model => model.NewSchedule.Friday)
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label">
                                            <input class="form-check-input" asp-for="NewSchedule.Saturday" /> @Html.DisplayNameFor(model => model.NewSchedule.Saturday)
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <label class="form-check-label">
                                            <input class="form-check-input" asp-for="NewSchedule.Sunday" /> @Html.DisplayNameFor(model => model.NewSchedule.Sunday)
                                        </label>
                                    </div>
                                </div>
                                <text id="weekdaysError" class="text-danger" style="display: none;">Select at least one weekday</text>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input id="button_submit" type="submit" class="btn btn-success" value="Create" />
                        <button type="button" class="btn btn-light" data-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">

    $(function () {
        $("#button_submit").click(function () {
            var checked_checkboxes = $("#weekdays input[type=checkbox]:checked");
            if (checked_checkboxes.length == 0) {
                $("#weekdaysError").show();
                return false;
            }
            return true;
        });
    });

    $(function () {
        $("#weekdays input[type=checkbox]").change(function () {
            $("#weekdaysError").hide();
        });
    });

    function toggleEnabled(elem) {
        var id_ = $(elem).data('schedule-id');
        //alert(id);

        $.ajax({
            url: "/Schedules/Index?handler=ToggleEnabled",
            method: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: {
                id: id_
            },
            success: function (response) {
                if (!response.success) {
                    alert(response.responseText);
                }
            },
            error: function (response) {
                alert("AJAX error, try logging in again");
            }
        });
    }

    var subscribed = @Model.Subscribed.ToString().ToLower();

    function toggleSubscribed() {
        var jobId = "@Model.Job.JobId";
        var activeClass = "btn-outline-success";
        var inactiveClass = "btn-outline-secondary";
        $.ajax({
            url: "./Schedules?handler=ToggleSubscribed",
            method: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: {
                id: jobId
            },
            success: function (response) {
                if (!response.success) {
                    alert(response.responseText);
                } else {
                    if (subscribed) {
                        $('#button_toggle_subscribed').removeClass(activeClass);
                        $('#button_toggle_subscribed').addClass(inactiveClass);
                        $('#span_toggle_subscribed').text('Subscribe');
                    } else {
                        $('#button_toggle_subscribed').addClass(activeClass);
                        $('#button_toggle_subscribed').removeClass(inactiveClass);
                        $('#span_toggle_subscribed').text('Unsubscribe');
                    }
                    subscribed = !subscribed;
                }
            },
            error: function (response) {
                alert("AJAX error, try logging in again");
            }
        });
    }
    </script>
}
