@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment WebHostEnvironment
@model EtlManager.Pages.Shared._JobDetailsNavigationPartialModel

<div class="row">
    <div class="col">
        <div class="btn-group">
            <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/loader.svg")))
                @Model.Job.JobName
            </button>
            <div class="dropdown-menu">
                <h6 class="dropdown-header">Show</h6>
                @foreach (var job in Model.Jobs)
                {
                    <a class="btn dropdown-item @(job.JobId == Model.Job.JobId ? "disabled" : null)" asp-page="/Jobs/JobDetails/@Model.RedirectPage" asp-route-id="@job.JobId">@job.JobName</a>
                }
            </div>
        </div>
    </div>
    <div class="col-xl d-xl-flex justify-content-xl-end mt-4 mt-xl-0">
        <div class="btn-toolbar">
            <div class="btn-group">
                <button type="button" id="button_toggle_subscribed" class="btn @(Model.Subscribed ? "btn-success" : "btn-secondary")" onclick="toggleSubscribed()">
                    @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/mail.svg")))
                    <span id="span_toggle_subscribed">@(Model.Subscribed ? "Unsubscribe" : "Subscribe")</span>
                </button>
            </div>
            @if (Model.IsEditor)
            {
                <div class="btn-group dropleft ml-3">
                    <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/edit-2.svg")))
                        Rename
                    </button>
                    <div class="dropdown-menu p-4" style="min-width: 25rem;">
                        <form method="post">
                            <input type="text" class="form-control form-control-sm" asp-for="NewJobName" value="@Model.Job.JobName" autocomplete="off">
                            <span asp-validation-for="NewJobName" class="text-danger"></span>
                            <button type="submit" class="btn btn-sm btn-success mt-3" asp-page="/Jobs/JobDetails/@Model.RedirectPage" asp-page-handler="RenameJob" asp-route-id="@Model.Job.JobId">Save</button>
                        </form>
                    </div>
                </div>
                <div class="btn-group ml-3 dropleft">
                    <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/trash-2.svg")))
                        Delete
                    </button>
                    <div class="dropdown-menu">
                        <h6 class="dropdown-header">Delete job?</h6>
                        <form method="post">
                            <button class="dropdown-item" asp-page="/Jobs/Index" asp-page-handler="Delete" asp-route-id="@Model.Job.JobId">Confirm</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

    
<div class="row flex-column-reverse flex-xl-row align-items-center">
    <div class="col-xl-7">
        <ul class="nav nav-pills mt-4 mb-4" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link @(Model.RedirectPage == "Index" ? "active" : null)" asp-page="./Index" asp-route-id="@Model.Job.JobId">
                    @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/list.svg")))
                    Steps
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link @(Model.RedirectPage == "Dependencies" ? "active" : null)" asp-page="./Dependencies" asp-route-id="@Model.Job.JobId">
                    @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/bootstrap/diagram-3-fill.svg")))
                    Dependencies
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link @(Model.RedirectPage == "Schedules" ? "active" : null)" asp-page="./Schedules" asp-route-id="@Model.Job.JobId">
                    @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/calendar.svg")))
                    Schedules
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link @(Model.RedirectPage == "History" ? "active" : null)" asp-page="./History" asp-route-id="@Model.Job.JobId">
                    @Html.Raw(System.IO.File.ReadAllText(System.IO.Path.Combine(WebHostEnvironment.WebRootPath, "icons/feather/activity.svg")))
                    History
                </a>
            </li>
        </ul>
    </div>
    <div class="col-xl-5 d-xl-flex justify-content-xl-end mt-4 mt-xl-0">
        <div class="btn-toolbar align-items-center">
            @if (Model.IsEditor)
            {
                <div class="custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" id="job_enabled_toggle" asp-for="@Model.Job.IsEnabled" onchange="toggleJobEnabled(this)" data-job-id="@Model.Job.JobId">
                    <label class="custom-control-label" style="cursor: pointer;" for="job_enabled_toggle">Enabled</label>
                </div>
                <div class="custom-control custom-switch ml-4">
                    <input type="checkbox" class="custom-control-input" id="dependency_mode_toggle" asp-for="@Model.Job.UseDependencyMode" onchange="toggleDependencyMode(this)" data-job-id="@Model.Job.JobId">
                    <label class="custom-control-label" style="cursor: pointer;" for="dependency_mode_toggle">Dependency mode</label>
                </div>
            }

        </div>
    </div>
</div>


<script type="text/javascript">
    function toggleDependencyMode(elem) {
        var id_ = $(elem).data('job-id');

        $.ajax({
            url: "/Jobs/JobDetails/Index?handler=ToggleDependencyMode",
            method: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: {
                id: id_
            },
            success: function (response) {
                if (!response.success) {
                    alert(response.responseText);
                }
            },
            error: function (response) {
                alert("AJAX error, try logging in again");
            }
        });
    }

    function toggleJobEnabled(elem) {
        var id_ = $(elem).data('job-id');

        $.ajax({
            url: "/Jobs/JobDetails/Index?handler=ToggleJobEnabled",
            method: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: {
                id: id_
            },
            success: function (response) {
                if (!response.success) {
                    alert(response.responseText);
                }
            },
            error: function (response) {
                alert("AJAX error, try logging in again");
            }
        });
    }

    var subscribed = @Model.Subscribed.ToString().ToLower();

    function toggleSubscribed() {
        var jobId = "@Model.Job.JobId";
        var activeClass = "btn-success";
        var inactiveClass = "btn-secondary";
        $.ajax({
            url: "/Jobs/JobDetails/Index?handler=ToggleSubscribed",
            method: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: {
                id: jobId
            },
            success: function (response) {
                if (!response.success) {
                    alert(response.responseText);
                } else {
                    if (subscribed) {
                        $('#button_toggle_subscribed').removeClass(activeClass);
                        $('#button_toggle_subscribed').addClass(inactiveClass);
                        $('#span_toggle_subscribed').text('Subscribe');
                    } else {
                        $('#button_toggle_subscribed').addClass(activeClass);
                        $('#button_toggle_subscribed').removeClass(inactiveClass);
                        $('#span_toggle_subscribed').text('Unsubscribe');
                    }
                    subscribed = !subscribed;
                }
            },
            error: function (response) {
                alert("AJAX error, try logging in again");
            }
        });
    }
</script>
